{"_type":"export","__export_format":4,"__export_date":"2023-07-02T14:52:52.447Z","__export_source":"insomnia.desktop.app:v2023.3.0","resources":[{"_id":"req_wrk_5c3033a008064547bff134a34743603ade569ba9","parentId":"fld_wrk_5c3033a008064547bff134a34743603aa886b8ff","modified":1680679362879,"created":1680679362879,"url":"{{ base_url }}/{{ countryCode }}/2.0/oauth/access_token","name":"Request access token","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"client_id\": \"string\",\n  \"client_secret\": \"string\",\n  \"grant_type\": \"string\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1680679362879,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_5c3033a008064547bff134a34743603aa886b8ff","parentId":"wrk_5c3033a008064547bff134a34743603a","modified":1680679362891,"created":1680679362891,"name":"OAuth API","description":"The purpose of the OAuth API is to generate an access token for the sandbox and production environments.","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1680679362891,"_type":"request_group"},{"_id":"wrk_5c3033a008064547bff134a34743603a","parentId":null,"modified":1680679366152,"created":1680679366152,"name":"Ninja Van API 4.1.0","description":"\n# Introduction\nNinja Van is a tech-enabled express delivery company providing hassle-free delivery services for businesses of all sizes across Southeast Asia. \nThis portal provides technical guidance on how to get started with and use Ninja Van APIs for your business scenarios.\n\nThe portal provides documentation for the following APIs and services:\n* [Order API](#tag/Order-API). Create delivery orders, generate waybills, and cancel orders.\n* [Tariff API](#tag/Tariff-API). Get a delivery fee estimate for an order.\n* [PUDO API](#tag/PUDO-API). Embed address selection information for Ninja Points into your e-commerce website.\n* [PUDO partners API](#tag/PUDO-partners-API). As a PUDO partner, use this API to trigger parcel collection and drop-off, and receive updates on the success of operational processes at your Ninja Points.\n* [Tracking API](#tag/Tracking-API). Retrieve tracking statuses for a list of parcels or for a single parcel.\n* [Webhooks](#tag/Webhooks). Receive updates on successful changes in the lifespan of an order.\n\nAll Ninja Van APIs are RESTful APIs.\n\n## Integration process\n1. You (shipper) inform us (Ninja Van) that you would like to integrate with our APIs.\n2. You and your Account Manager settle the commercial agreements.\n3. Your Account Manager creates your Ninja Dashboard account in the sandbox environment, and sends you an on-boarding email.\n4. To access the production APIs, you need to build an integration on your end, and submit three order creation requests in sandbox for our [developer support team](#section/Introduction/Contact-information) to review.\n5. You generate client credentials—Client ID and Client Key—in your sandbox Ninja Dashboard account.\n6. Using the sandbox client credentials, you generate an access token for the sandbox environment by calling the OAuth API.\n7. You create an order in the sandbox environment to verify that the integration works.\n8. If the order is created successfully, you make three order creation requests in sandbox, and submit the tracking IDs (TIDs) to our developer support team.\n9. Our developer support team reviews the requests. If the payload meets the requirements, then you're granted access to the order creation endpoint in production.\n10. You generate a new Client ID and Client Key in your production Ninja Dashboard account.\n11. You generate an access token for the production environment.\n12. You start using the APIs for delivery by making real-life order creation requests in production.\n\nFor account-related issues, please contact your Account Manager. \nFor technical issues related to API integration, send an email to [developer support](#section/Introduction/Contact-information).\n\n### Shippers operating in multiple countries\nFor shippers operating in multiple countries, the audit process needs to be initiated by the Account Manager and has to be done separately for each country of operation.\n\n### Shippers with multiple accounts for the same shipper\nFor shippers who plan to have multiple accounts for the same shipper in the Ninja Van platform, we advise you to enroll as a marketplace shipper. \nOtherwise, your request to access production APIs with several accounts of the same shipper may be rejected after submission.\n\n## Authentication\nNinja Van APIs use the OAuth 2.0 protocol for authentication and authorization.\n\nTo begin, obtain OAuth 2.0 client credentials from the developer settings in your Ninja Dashboard account. \nThen use your client app to request an access token, extract the token from the response, and send it to a Ninja Van API that you want to access.\n\nHowever, Ninja Van APIs in the sandbox environment and production environment require different access tokens. \nThe reason for is that the Ninja Dashboard accounts in the two environments are different, and they use different credentials.\n\nThis means that you need to use the sandbox access token for testing your API requests and submitting sample orders for an integration audit. \nOnce we grant you access to production, you'll need to generate a new access token in your production Dashboard account.\n\n### Client credentials\nThe credentials are available in your Ninja Dashboard account, under **Settings > IT Settings**.\nFor more information, see [Get access to sandbox](#section/Get-started/Get-access-to-sandbox) and [Get access to production](#section/Get-started/Get-access-to-production).\n\n### Access token lifetime\nAccess tokens have limited lifetimes. Five minutes before your access token expires, or if a request to a Ninja Van API returns an HTTP `401` status code, generate a new access token.    \n\n## Integration requirements\n\n### OAuth API\n[OAuth 2.0 token](#tag/OAuth-API/paths/~1{countryCode}~12.0~1oauth~1access_token/post) endpoint:\n* You MUST cache the access token and its expiration timestamp.\n\n### Order API\n[Order creation](#tag/Order-API/paths/~1{countryCode}~14.1~1orders/post) and [order cancellation](#tag/Order-API/paths/~1{countryCode}~12.2~1orders~1{trackingNo}/delete) endpoints:\n* If the API returns an HTTP `5xx` status code, you SHOULD retry an order creation request.\n* If the API returns an HTTP `4xx` status code, you SHOULD log the response for debugging.\n* You SHOULD NOT retry the same order creation request without fixing the error specified in the response.\n\n[Waybill generation](#tag/Order-API/paths/~1{countryCode}~12.0~1reports~1waybill/get) endpoint:\n\nYou MUST cache the waybill upon generation and avoid excessive calls to this endpoint.\n\n### Tracking API\n[Get events for single parcel](#tag/Tracking-API/paths/~1{countryCode}~11.0~1orders~1tracking-events~1{trackingNumber}/get) \nand \n[Get events for list of parcels](#tag/Tracking-API/paths/~1{countryCode}~11.0~1orders~1tracking-events/get) endpoints.\n* You SHOULD NOT use these endpoints as a primary mechanism to get parcel status updates.\n* You SHOULD subscribe to our webhook for parcel status updates and only use these endpoints when there is a failure to receive webhooks.\n* In order for us to review your use case, please provide a system flow diagram that shows how the APIs will be integrated with your systems. The trigger points for which the APIs are being called should be clearly shown in the diagram.\n\n## Base URL by environment\n### Production base URL\n* URL: `https://api.ninjavan.co`\n* URL with country code: `https://api.ninjavan.co/{countryCode}`\n\n### Sandbox base URL\n* URL: `https://api-sandbox.ninjavan.co`\n* URL with country code: `https://api-sandbox.ninjavan.co/sg`\n\n**Note:** Always send your sandbox requests to the Singapore sandbox API. However, you can send localized addresses for the countries that you are testing for. In other words, you can craft the API request as you would for the production environment. The only difference is the URL.\n\n## Rate limits\nIn order to provide a high quality of service for all customers, our API is rate-limited. \nIf you exceed the rate limit, the API responds with an HTTP `429 API rate limit exceeded` status code, and you get temporarily blocked from accessing the API.\nIn this case, retry your request after a few hours.\n\nThe following endpoints are rate-limited:\n\n* OAuth API: [Request access token](#tag/OAuth-API/paths/~1{countryCode}~12.0~1oauth~1access_token/post)\n* Order API: [Generate waybill](#tag/Order-API/paths/~1{countryCode}~12.0~1reports~1waybill/get)\n* Tariff API: [Get price estimate](#tag/Tariff-API/paths/~1{countryCode}~11.0~1public~1price/post). The limit is 20 calls per minute.\n* Tracking API:\n  * [Get events for single parcel](#tag/Tracking-API/paths/~1{countryCode}~11.0~1orders~1tracking-events~1{trackingNumber}/get)\n  * [Get events for list of parcels](#tag/Tracking-API/paths/~1{countryCode}~11.0~1orders~1tracking-events/get)\n\n## Contact information\nTo contact the developer support team, send an email to the address that corresponds to your country:\n\n* Indonesia: [id-devsupport@ninjavan.co](mailto:id-devsupport@ninjavan.co)\n* Malaysia: [my-devsupport@ninjavan.co](mailto:my-devsupport@ninjavan.co)\n* Philippines: [ph-devsupport@ninjavan.co](mailto:ph-devsupport@ninjavan.co)\n* Singapore: [sg-devsupport@ninjavan.co](mailto:sg-devsupport@ninjavan.co)\n* Thailand: [th-devsupport@ninjavan.co](mailto:th-devsupport@ninjavan.co)\n* Vietnam: [vn-devsupport@ninjavan.co](mailto:vn-devsupport@ninjavan.co)\n* China office: [cn-devsupport@ninjavan.co](mailto:cn-devsupport@ninjavan.co)\n\n# Get started\n\n## Get access to sandbox\nTo build your workflow and test our APIs, you need to have access to the sandbox environment.\n\n**Note:** All sandbox requests must be sent to the Singapore sandbox API: `https://api-sandbox.ninjavan.co/sg`.\n\n### Prerequisites\n* Ninja Van Postpaid Pro account.\n* Access to Ninja Dashboard.\n\n### Steps\n1. Open [Ninja Dashboard](https://dashboard-sandbox.ninjavan.co/login-v2) in sandbox.\n2. Enter your email and password, and click **Login**.\n3. Go to **Settings > IT Settings**.\n4. Click **REGENERATE CLIENT ID & KEY**. Your credentials appear under **Client ID** and **Client Key**, respectively.\n5. Pass the credentials to the [OAuth API](#tag/OAuth-API/paths/~1{countryCode}~12.0~1oauth~1access_token/post) to get your access token.\n\nUse this token for testing your requests to Ninja Van APIs in the sandbox environment. This guide provides [sample parameters and payloads](#section/Sample-order-creation-requests) for various business scenarios.\n\n## Review your integration\nBefore granting you access to production, Ninja Van needs to do an audit of your integration. Take these steps to get started:\n1. In the sandbox environment, submit three different order creation requests reflective of the type of orders that you'll be sending in production, with accurate address and other information. \nThese requests must be sent via the integration that you built, and not via Postman or any other API testing tool.\n2. Send an email to [developer support](#section/Introduction/Contact-information) with the tracking numbers of the orders, and the business requirements.\n\nThe Ninja Van developer support team will review your requests, and if they meet our requirements, then you'll be granted access to the Order API in production. \n\n**Note:** Successful completion of the integration audit doesn't automatically grant you the permission to use the waybill generation endpoint. To request access to this endpoint, see [How to request access](#tag/Order-API/paths/~1{countryCode}~12.0~1reports~1waybill/get).\n\n### Shippers operating in multiple countries\nFor shippers operating in multiple countries, the audit process needs to be initiated by the Account Manager and has to be done separately for each country of operation.\n\n## Get access to production\nThe access token that you used before you were granted access to production, will not work. This is why you need to generate a new token to access the production APIs.\n\n### Prerequisites\n* Ninja Van Postpaid Pro account.\n* Access to Ninja Dashboard.\n\n### Steps\n1. Open [Ninja Dashboard](https://dashboard.ninjavan.co/login-v2) in production.\n2. Enter your email and password, and click **Login**.\n3. Go to **Settings > IT Settings**.\n4. Click **REGENERATE CLIENT ID & KEY**. Your credentials appear under **Client ID** and **Client Key**, respectively.\n5. Pass the credentials to the [OAuth API](#tag/OAuth-API/paths/~1{countryCode}~12.0~1oauth~1access_token/post) to get your access token.\n\nUse this token to authenticate your requests to our APIs in the production environment.\n\n","scope":"design","_type":"workspace"},{"_id":"req_wrk_5c3033a008064547bff134a34743603a0baad1c6","parentId":"fld_wrk_5c3033a008064547bff134a34743603a112fbd08","modified":1680679362877,"created":1680679362877,"url":"{{ base_url }}/{{ countryCode }}/4.1/orders","name":"Create order","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"service_type\": \"Parcel\",\n  \"service_level\": \"Standard\",\n  \"requested_tracking_number\": \"1234-56789\",\n  \"reference\": {\n    \"merchant_order_number\": \"SHIP-1234-56789\"\n  },\n  \"from\": {\n    \"name\": \"John Doe\",\n    \"phone_number\": \"+60138201527\",\n    \"email\": \"john.doe@gmail.com\",\n    \"address\": {\n      \"address1\": \"17 Lorong Jambu 3\",\n      \"address2\": \"\",\n      \"area\": \"Taman Sri Delima\",\n      \"city\": \"Simpang Ampat\",\n      \"state\": \"Pulau Pinang\",\n      \"address_type\": \"office\",\n      \"country\": \"MY\",\n      \"postcode\": \"51200\"\n    }\n  },\n  \"to\": {\n    \"name\": \"Jane Doe\",\n    \"phone_number\": \"+60103067174\",\n    \"email\": \"jane.doe@gmail.com\",\n    \"address\": {\n      \"address1\": \"Jalan PJU 8/8\",\n      \"address2\": \"\",\n      \"area\": \"Damansara Perdana\",\n      \"city\": \"Petaling Jaya\",\n      \"state\": \"Selangor\",\n      \"address_type\": \"home\",\n      \"country\": \"MY\",\n      \"postcode\": \"47820\"\n    }\n  },\n  \"parcel_job\": {\n    \"is_pickup_required\": true,\n    \"pickup_address_id\": \"98989012\",\n    \"pickup_service_type\": \"Scheduled\",\n    \"pickup_service_level\": \"Standard\",\n    \"pickup_date\": \"2021-12-15\",\n    \"pickup_timeslot\": {\n      \"start_time\": \"09:00\",\n      \"end_time\": \"12:00\",\n      \"timezone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"pickup_instructions\": \"Pickup with care!\",\n    \"delivery_instructions\": \"If recipient is not around, leave parcel in power riser.\",\n    \"delivery_start_date\": \"2021-12-16\",\n    \"delivery_timeslot\": {\n      \"start_time\": \"09:00\",\n      \"end_time\": \"12:00\",\n      \"timezone\": \"Asia/Kuala_Lumpur\"\n    },\n    \"dimensions\": {\n      \"weight\": 1.5\n    },\n    \"items\": [\n      {\n        \"item_description\": \"Sample description\",\n        \"quantity\": 1,\n        \"is_dangerous_good\": false\n      }\n    ]\n  }\n}"},"parameters":[],"headers":[{"name":"Authorization","disabled":false,"value":"string"},{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1680679362877,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_5c3033a008064547bff134a34743603a112fbd08","parentId":"wrk_5c3033a008064547bff134a34743603a","modified":1680679362890,"created":1680679362890,"name":"Order API","description":"The purpose of the Order API is to create delivery orders, generate waybills, and cancel orders.","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1680679362890,"_type":"request_group"},{"_id":"req_wrk_5c3033a008064547bff134a34743603acf68ca9b","parentId":"fld_wrk_5c3033a008064547bff134a34743603a112fbd08","modified":1680679362875,"created":1680679362875,"url":"{{ base_url }}/{{ countryCode }}/2.0/reports/waybill","name":"Generate waybill","description":"","method":"GET","body":{},"parameters":[{"name":"tids","disabled":false,"value":"string"},{"name":"h","disabled":true,"value":"0"}],"headers":[{"name":"Authorization","disabled":false,"value":"string"}],"authentication":{},"metaSortKey":-1680679362875,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_5c3033a008064547bff134a34743603aa1d6cbe7","parentId":"fld_wrk_5c3033a008064547bff134a34743603a112fbd08","modified":1680679362872,"created":1680679362872,"url":"{{ base_url }}/{{ countryCode }}/2.2/orders/{{ trackingNo }}","name":"Cancel order","description":"","method":"DELETE","body":{},"parameters":[],"headers":[{"name":"Authorization","disabled":false,"value":"string"}],"authentication":{},"metaSortKey":-1680679362872,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_5c3033a008064547bff134a34743603aa93ca97d","parentId":"fld_wrk_5c3033a008064547bff134a34743603ad1235b79","modified":1680679362862,"created":1680679362862,"url":"{{ base_url }}/{{ countryCode }}/1.0/public/price","name":"Get price estimate","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"weight\": 2.38,\n  \"service_level\": \"Standard\",\n  \"from\": {\n    \"l1_tier_code\": \"ID_A00007_01\",\n    \"l2_tier_code\": \"ID_B00069_01\"\n  },\n  \"to\": {\n    \"l1_tier_code\": \"ID_A00022_01\",\n    \"l2_tier_code\": \"ID_B00296_01\"\n  }\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1680679362862,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_5c3033a008064547bff134a34743603ad1235b79","parentId":"wrk_5c3033a008064547bff134a34743603a","modified":1680679362889,"created":1680679362889,"name":"Tariff API","description":"The purpose of the Tariff API is to provide a delivery fee estimate for an order.\n\n**Note:** This API is only available for Indonesia.\n\n","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1680679362889,"_type":"request_group"},{"_id":"req_wrk_5c3033a008064547bff134a34743603a2cdbf617","parentId":"fld_wrk_5c3033a008064547bff134a34743603a9ca213c6","modified":1680679362869,"created":1680679362869,"url":"{{ base_url }}/{{ countryCode }}/2.0/pudos","name":"List Ninja Points v2","description":"","method":"GET","body":{},"parameters":[{"name":"can_customer_collect","disabled":true,"value":"true"},{"name":"allow_create_post","disabled":true,"value":"true"},{"name":"allow_customer_return","disabled":true,"value":"true"},{"name":"allow_shipper_send","disabled":true,"value":"true"},{"name":"allow_create_pack","disabled":true,"value":"true"},{"name":"can_sell_packs","disabled":true,"value":"true"}],"headers":[],"authentication":{},"metaSortKey":-1680679362869,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_5c3033a008064547bff134a34743603a9ca213c6","parentId":"wrk_5c3033a008064547bff134a34743603a","modified":1680679362888,"created":1680679362888,"name":"PUDO API","description":"The purpose of the PUDO API is to provide address selection information for Ninja Points that you can embed into your e-commerce website. \nThis way, your customers can collect their parcels from our extensive network of Ninja Points—Ninja Van's partner retail shops and partner automated parcel lockers strategically located in populous and urban areas with high footfall.\n\nIn addition to parcel collection, customers can use Ninja Points to drop-off their return parcels.\n\nFor more information about Ninja Points, visit the [Ninja Points website](https://www.ninjavan.co/en-sg/ninja-points).\n\n## How to use the PUDO API\n1. Make sure that you can properly load the list of addresses from https://api.ninjavan.co/sg/2.0/pudos in JSON format. \n2. At your site's address entry page, provide another component that enables selection of Ninja Point locations.\n3. After the form retrieves the address, input it into the order in a way that is specific to your system.   \n\n","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1680679362888,"_type":"request_group"},{"_id":"req_wrk_5c3033a008064547bff134a34743603a18ff876b","parentId":"fld_wrk_5c3033a008064547bff134a34743603aad3bc7f4","modified":1680679362867,"created":1680679362867,"url":"{{ base_url }}/{{ countryCode }}/1.0/send-orders/{{ trackingId }}","name":"Scan parcel for shipper drop-off","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1680679362867,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_5c3033a008064547bff134a34743603aad3bc7f4","parentId":"wrk_5c3033a008064547bff134a34743603a","modified":1680679362887,"created":1680679362887,"name":"PUDO partners API","description":"The PUDO partners API is used to trigger operational processes at external Ninja Points managed by Ninja Van's partners.\n\n","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1680679362887,"_type":"request_group"},{"_id":"req_wrk_5c3033a008064547bff134a34743603a69b0a962","parentId":"fld_wrk_5c3033a008064547bff134a34743603aad3bc7f4","modified":1680679362865,"created":1680679362865,"url":"{{ base_url }}/{{ countryCode }}/1.0/send-orders/drop-off","name":"Trigger shipper drop-off for parcel","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"store\": \"PSVKV4M16A\",\n  \"received_at\": \"2022-06-01 00:00:00\",\n  \"tracking_ids\": [\n    \"NVSGBEDBP12345ADPL\",\n    \"NVSGBEDBP03784ADPL\"\n  ]\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1680679362865,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_5c3033a008064547bff134a34743603ae66c0d40","parentId":"fld_wrk_5c3033a008064547bff134a34743603aad3bc7f4","modified":1680679362863,"created":1680679362863,"url":"{{ base_url }}/{{ countryCode }}/1.0/dp-order-events","name":"Trigger webhooks for customer collection, driver drop-off, driver collection","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"tracking_id\": \"string\",\n  \"store_id\": \"string\",\n  \"received_at\": \"string\",\n  \"released_at\": \"string\",\n  \"customer_unlock_code\": \"string\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1680679362863,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_5c3033a008064547bff134a34743603a52737689","parentId":"fld_wrk_5c3033a008064547bff134a34743603a924686b1","modified":1680679362859,"created":1680679362859,"url":"{{ base_url }}/{{ countryCode }}/1.0/orders/tracking-events/{{ trackingNumber }}","name":"Get events for single parcel","description":"","method":"GET","body":{},"parameters":[],"headers":[{"name":"Authorization","disabled":false,"value":"string"}],"authentication":{},"metaSortKey":-1680679362859,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_5c3033a008064547bff134a34743603a924686b1","parentId":"wrk_5c3033a008064547bff134a34743603a","modified":1680679362886,"created":1680679362886,"name":"Tracking API","description":"The purpose of the Tracking API is to retrieve tracking statuses for a list of parcels or for a single parcel.\n\nThe Tracking API is limited in terms of the rate that it can be called, and the number of tracking numbers that you can query in a single request. We recommend the use of this pull-based API as a backup mechanism to employ when webhooks fail to sync information from our servers to yours.    \n\n","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1680679362886,"_type":"request_group"},{"_id":"req_wrk_5c3033a008064547bff134a34743603a1251048d","parentId":"fld_wrk_5c3033a008064547bff134a34743603a924686b1","modified":1680679362857,"created":1680679362857,"url":"{{ base_url }}/{{ countryCode }}/1.0/orders/tracking-events","name":"Get events for list of parcels","description":"","method":"GET","body":{},"parameters":[{"name":"tracking_number","disabled":false,"value":"string"}],"headers":[{"name":"Authorization","disabled":false,"value":"string"}],"authentication":{},"metaSortKey":-1680679362857,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_636bbf4f21cd1c70e781dbe25d9c7755ddaf0c76","parentId":"wrk_5c3033a008064547bff134a34743603a","modified":1680679362895,"created":1680679362892,"name":"Base environment","data":{"base_url":"{{ scheme }}://{{ host }}{{ base_path }}"},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1680679362892,"_type":"environment"},{"_id":"jar_636bbf4f21cd1c70e781dbe25d9c7755ddaf0c76","parentId":"wrk_5c3033a008064547bff134a34743603a","modified":1680679373527,"created":1680679373527,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_21cb731ef5834801979439e4d6d400b2","parentId":"wrk_5c3033a008064547bff134a34743603a","modified":1680679366165,"created":1680679366154,"fileName":"Ninja Van API 4.1.0","contents":"openapi: 3.0.1\ninfo:\n  title: Ninja Van API\n  version: 4.1.0\n  description: |+\n\n    # Introduction\n    Ninja Van is a tech-enabled express delivery company providing hassle-free delivery services for businesses of all sizes across Southeast Asia. \n    This portal provides technical guidance on how to get started with and use Ninja Van APIs for your business scenarios.\n    \n    The portal provides documentation for the following APIs and services:\n    * [Order API](#tag/Order-API). Create delivery orders, generate waybills, and cancel orders.\n    * [Tariff API](#tag/Tariff-API). Get a delivery fee estimate for an order.\n    * [PUDO API](#tag/PUDO-API). Embed address selection information for Ninja Points into your e-commerce website.\n    * [PUDO partners API](#tag/PUDO-partners-API). As a PUDO partner, use this API to trigger parcel collection and drop-off, and receive updates on the success of operational processes at your Ninja Points.\n    * [Tracking API](#tag/Tracking-API). Retrieve tracking statuses for a list of parcels or for a single parcel.\n    * [Webhooks](#tag/Webhooks). Receive updates on successful changes in the lifespan of an order.\n\n    All Ninja Van APIs are RESTful APIs.\n\n    ## Integration process\n    1. You (shipper) inform us (Ninja Van) that you would like to integrate with our APIs.\n    2. You and your Account Manager settle the commercial agreements.\n    3. Your Account Manager creates your Ninja Dashboard account in the sandbox environment, and sends you an on-boarding email.\n    4. To access the production APIs, you need to build an integration on your end, and submit three order creation requests in sandbox for our [developer support team](#section/Introduction/Contact-information) to review.\n    5. You generate client credentials—Client ID and Client Key—in your sandbox Ninja Dashboard account.\n    6. Using the sandbox client credentials, you generate an access token for the sandbox environment by calling the OAuth API.\n    7. You create an order in the sandbox environment to verify that the integration works.\n    8. If the order is created successfully, you make three order creation requests in sandbox, and submit the tracking IDs (TIDs) to our developer support team.\n    9. Our developer support team reviews the requests. If the payload meets the requirements, then you're granted access to the order creation endpoint in production.\n    10. You generate a new Client ID and Client Key in your production Ninja Dashboard account.\n    11. You generate an access token for the production environment.\n    12. You start using the APIs for delivery by making real-life order creation requests in production.\n\n    For account-related issues, please contact your Account Manager. \n    For technical issues related to API integration, send an email to [developer support](#section/Introduction/Contact-information).\n\n    ### Shippers operating in multiple countries\n    For shippers operating in multiple countries, the audit process needs to be initiated by the Account Manager and has to be done separately for each country of operation.\n\n    ### Shippers with multiple accounts for the same shipper\n    For shippers who plan to have multiple accounts for the same shipper in the Ninja Van platform, we advise you to enroll as a marketplace shipper. \n    Otherwise, your request to access production APIs with several accounts of the same shipper may be rejected after submission.\n\n    ## Authentication\n    Ninja Van APIs use the OAuth 2.0 protocol for authentication and authorization.\n\n    To begin, obtain OAuth 2.0 client credentials from the developer settings in your Ninja Dashboard account. \n    Then use your client app to request an access token, extract the token from the response, and send it to a Ninja Van API that you want to access.\n    \n    However, Ninja Van APIs in the sandbox environment and production environment require different access tokens. \n    The reason for is that the Ninja Dashboard accounts in the two environments are different, and they use different credentials.\n\n    This means that you need to use the sandbox access token for testing your API requests and submitting sample orders for an integration audit. \n    Once we grant you access to production, you'll need to generate a new access token in your production Dashboard account.\n    \n    ### Client credentials\n    The credentials are available in your Ninja Dashboard account, under **Settings > IT Settings**.\n    For more information, see [Get access to sandbox](#section/Get-started/Get-access-to-sandbox) and [Get access to production](#section/Get-started/Get-access-to-production).\n\n    ### Access token lifetime\n    Access tokens have limited lifetimes. Five minutes before your access token expires, or if a request to a Ninja Van API returns an HTTP `401` status code, generate a new access token.    \n\n    ## Integration requirements\n\n    ### OAuth API\n    [OAuth 2.0 token](#tag/OAuth-API/paths/~1{countryCode}~12.0~1oauth~1access_token/post) endpoint:\n    * You MUST cache the access token and its expiration timestamp.\n    \n    ### Order API\n    [Order creation](#tag/Order-API/paths/~1{countryCode}~14.1~1orders/post) and [order cancellation](#tag/Order-API/paths/~1{countryCode}~12.2~1orders~1{trackingNo}/delete) endpoints:\n    * If the API returns an HTTP `5xx` status code, you SHOULD retry an order creation request.\n    * If the API returns an HTTP `4xx` status code, you SHOULD log the response for debugging.\n    * You SHOULD NOT retry the same order creation request without fixing the error specified in the response.\n    \n    [Waybill generation](#tag/Order-API/paths/~1{countryCode}~12.0~1reports~1waybill/get) endpoint:\n    \n    You MUST cache the waybill upon generation and avoid excessive calls to this endpoint.\n\n    ### Tracking API\n    [Get events for single parcel](#tag/Tracking-API/paths/~1{countryCode}~11.0~1orders~1tracking-events~1{trackingNumber}/get) \n    and \n    [Get events for list of parcels](#tag/Tracking-API/paths/~1{countryCode}~11.0~1orders~1tracking-events/get) endpoints.\n    * You SHOULD NOT use these endpoints as a primary mechanism to get parcel status updates.\n    * You SHOULD subscribe to our webhook for parcel status updates and only use these endpoints when there is a failure to receive webhooks.\n    * In order for us to review your use case, please provide a system flow diagram that shows how the APIs will be integrated with your systems. The trigger points for which the APIs are being called should be clearly shown in the diagram.\n\n    ## Base URL by environment\n    ### Production base URL\n    * URL: `https://api.ninjavan.co`\n    * URL with country code: `https://api.ninjavan.co/{countryCode}`\n\n    ### Sandbox base URL\n    * URL: `https://api-sandbox.ninjavan.co`\n    * URL with country code: `https://api-sandbox.ninjavan.co/sg`\n\n    **Note:** Always send your sandbox requests to the Singapore sandbox API. However, you can send localized addresses for the countries that you are testing for. In other words, you can craft the API request as you would for the production environment. The only difference is the URL.\n\n    ## Rate limits\n    In order to provide a high quality of service for all customers, our API is rate-limited. \n    If you exceed the rate limit, the API responds with an HTTP `429 API rate limit exceeded` status code, and you get temporarily blocked from accessing the API.\n    In this case, retry your request after a few hours.\n\n    The following endpoints are rate-limited:\n\n    * OAuth API: [Request access token](#tag/OAuth-API/paths/~1{countryCode}~12.0~1oauth~1access_token/post)\n    * Order API: [Generate waybill](#tag/Order-API/paths/~1{countryCode}~12.0~1reports~1waybill/get)\n    * Tariff API: [Get price estimate](#tag/Tariff-API/paths/~1{countryCode}~11.0~1public~1price/post). The limit is 20 calls per minute.\n    * Tracking API:\n      * [Get events for single parcel](#tag/Tracking-API/paths/~1{countryCode}~11.0~1orders~1tracking-events~1{trackingNumber}/get)\n      * [Get events for list of parcels](#tag/Tracking-API/paths/~1{countryCode}~11.0~1orders~1tracking-events/get)\n    \n    ## Contact information\n    To contact the developer support team, send an email to the address that corresponds to your country:\n\n    * Indonesia: [id-devsupport@ninjavan.co](mailto:id-devsupport@ninjavan.co)\n    * Malaysia: [my-devsupport@ninjavan.co](mailto:my-devsupport@ninjavan.co)\n    * Philippines: [ph-devsupport@ninjavan.co](mailto:ph-devsupport@ninjavan.co)\n    * Singapore: [sg-devsupport@ninjavan.co](mailto:sg-devsupport@ninjavan.co)\n    * Thailand: [th-devsupport@ninjavan.co](mailto:th-devsupport@ninjavan.co)\n    * Vietnam: [vn-devsupport@ninjavan.co](mailto:vn-devsupport@ninjavan.co)\n    * China office: [cn-devsupport@ninjavan.co](mailto:cn-devsupport@ninjavan.co)\n\n    # Get started\n    \n    ## Get access to sandbox\n    To build your workflow and test our APIs, you need to have access to the sandbox environment.\n\n    **Note:** All sandbox requests must be sent to the Singapore sandbox API: `https://api-sandbox.ninjavan.co/sg`.\n\n    ### Prerequisites\n    * Ninja Van Postpaid Pro account.\n    * Access to Ninja Dashboard.\n\n    ### Steps\n    1. Open [Ninja Dashboard](https://dashboard-sandbox.ninjavan.co/login-v2) in sandbox.\n    2. Enter your email and password, and click **Login**.\n    3. Go to **Settings > IT Settings**.\n    4. Click **REGENERATE CLIENT ID & KEY**. Your credentials appear under **Client ID** and **Client Key**, respectively.\n    5. Pass the credentials to the [OAuth API](#tag/OAuth-API/paths/~1{countryCode}~12.0~1oauth~1access_token/post) to get your access token.\n    \n    Use this token for testing your requests to Ninja Van APIs in the sandbox environment. This guide provides [sample parameters and payloads](#section/Sample-order-creation-requests) for various business scenarios.\n    \n    ## Review your integration\n    Before granting you access to production, Ninja Van needs to do an audit of your integration. Take these steps to get started:\n    1. In the sandbox environment, submit three different order creation requests reflective of the type of orders that you'll be sending in production, with accurate address and other information. \n    These requests must be sent via the integration that you built, and not via Postman or any other API testing tool.\n    2. Send an email to [developer support](#section/Introduction/Contact-information) with the tracking numbers of the orders, and the business requirements.\n    \n    The Ninja Van developer support team will review your requests, and if they meet our requirements, then you'll be granted access to the Order API in production. \n    \n    **Note:** Successful completion of the integration audit doesn't automatically grant you the permission to use the waybill generation endpoint. To request access to this endpoint, see [How to request access](#tag/Order-API/paths/~1{countryCode}~12.0~1reports~1waybill/get).\n\n    ### Shippers operating in multiple countries\n    For shippers operating in multiple countries, the audit process needs to be initiated by the Account Manager and has to be done separately for each country of operation.\n    \n    ## Get access to production\n    The access token that you used before you were granted access to production, will not work. This is why you need to generate a new token to access the production APIs.\n\n    ### Prerequisites\n    * Ninja Van Postpaid Pro account.\n    * Access to Ninja Dashboard.\n\n    ### Steps\n    1. Open [Ninja Dashboard](https://dashboard.ninjavan.co/login-v2) in production.\n    2. Enter your email and password, and click **Login**.\n    3. Go to **Settings > IT Settings**.\n    4. Click **REGENERATE CLIENT ID & KEY**. Your credentials appear under **Client ID** and **Client Key**, respectively.\n    5. Pass the credentials to the [OAuth API](#tag/OAuth-API/paths/~1{countryCode}~12.0~1oauth~1access_token/post) to get your access token.\n\n    Use this token to authenticate your requests to our APIs in the production environment.\n\n  x-logo:\n    url: 'https://images.ctfassets.net/iu7xhxelvu8m/6LC1QNfA1NyDGfp8sBN0gK/ef728c17096218198e06e1a3d990804b/nv-logo-top-sg.svg'\n    backgroundColor: '#ffffff'\n    altText: Ninja Van\nservers:\n  - url: 'https://api-sandbox.ninjavan.co'\n    description: Sandbox server\n  - url: 'https://api.ninjavan.co'\n    description: Production server\ntags:\n  - name: OAuth API\n    description: The purpose of the OAuth API is to generate an access token for the sandbox and production environments.\n\n  - name: Order API\n    description: The purpose of the Order API is to create delivery orders, generate waybills, and cancel orders.\n\n  - name: Tariff API\n    description: |+ \n      The purpose of the Tariff API is to provide a delivery fee estimate for an order.\n\n      **Note:** This API is only available for Indonesia.\n\n  - name: PUDO API\n    description: |+\n      The purpose of the PUDO API is to provide address selection information for Ninja Points that you can embed into your e-commerce website. \n      This way, your customers can collect their parcels from our extensive network of Ninja Points—Ninja Van's partner retail shops and partner automated parcel lockers strategically located in populous and urban areas with high footfall.\n\n      In addition to parcel collection, customers can use Ninja Points to drop-off their return parcels.\n      \n      For more information about Ninja Points, visit the [Ninja Points website](https://www.ninjavan.co/en-sg/ninja-points).\n  \n      ## How to use the PUDO API\n      1. Make sure that you can properly load the list of addresses from https://api.ninjavan.co/sg/2.0/pudos in JSON format. \n      2. At your site's address entry page, provide another component that enables selection of Ninja Point locations.\n      3. After the form retrieves the address, input it into the order in a way that is specific to your system.   \n\n  - name: PUDO partners API\n    description: |+\n      The PUDO partners API is used to trigger operational processes at external Ninja Points managed by Ninja Van's partners.\n\n  - name: Tracking API\n    description: |+\n      The purpose of the Tracking API is to retrieve tracking statuses for a list of parcels or for a single parcel.\n\n      The Tracking API is limited in terms of the rate that it can be called, and the number of tracking numbers that you can query in a single request. We recommend the use of this pull-based API as a backup mechanism to employ when webhooks fail to sync information from our servers to yours.    \n\n  - name: Webhooks\n    description: |+\n\n      A webhook is a tool for retrieving and storing data from certain events. Ninja Van sends webhooks upon successful status changes in the lifespan of an order. \n      This section covers the key information that you need to receive webhooks from the Ninja Van platform. \n\n      | Allowed HTTP request | Description                   |\n      |--------------------- |-------------------------------|\n      | POST                 | Creates or updates a resource. |\n      \n      \n\n      # Webhook events\n  \n        | Event                                 | Terminal status?    | Webhook is triggered when... | \n        |---------------------------------------|---------------------|------------------------------|\n        | Pending Pickup                        |  NO                 | Order creation is fully processed in our system, and the order is waiting to be picked up. |\n        | Successful Pickup                     |  NO                 | Driver picks up the order. |\n        | En-route to Sorting Hub               |  NO                 | Order is picked up and is on the way to a sorting hub. |\n        | Arrived at Sorting Hub                |  NO                 | Order arrives at a sorting hub for further processing. |\n        | Transferred to 3PL                    |  NO                 | Order is handed over to a 3PL for delivery. |\n        | Arrived at Origin Hub                 |  NO                 | Order arrives at an origin hub for further processing. |\n        | On Vehicle for Delivery               |  NO                 | Driver picks up the parcel from a sorting hub for delivery. |\n        | Pending Reschedule                    |  NO                 | Driver marks the order as delivery failed, and the order is waiting to be rescheduled. |\n        | Pickup Fail                           |  NO                 | Driver isn't able to pick up the parcel. The order's waiting for a pickup to be rescheduled. |\n        | First Attempt Delivery Fail           |  NO                 | Driver isn't able to deliver the parcel and marks the order as delivery failed. |\n        | On Vehicle for Delivery (RTS)         |  NO                 | Order is in a van and en-route to the sender after a failed delivery. |\n        | Returned to Sender                    |  NO                 | After repeated failed deliveries, the order is sent back to the sender. | \n        | Arrived at Distribution Point         |  NO                 | Parcel has been placed at a Ninja Point for customer collection. | \n        | Return to Sender Triggered            |  NO                 | After repeated failed deliveries, Ninja Van initiates the return flow for the order. | \n        | Pending Pickup at Distribution Point  |  NO                 | Order has been received at a Ninja Point and is waiting to be picked up. | \n        | Van En-route to Pickup                |  NO                 | A van has been dispatched to pick up the return order. | \n        | Parcel Size                           |  NO                 | Parcel size of the order has been changed. | \n        | Parcel Weight                         |  NO                 | Parcel weight of the order has been changed. |\n        | Parcel Measurements Update            |  NO                 | Parcel size, or parcel weight, or parcel dimensions have been changed. | \n        | Staging                               |  NO                 | Order is created and is at the staging phase. | \n        | Cross Border Transit                  |  NO                 | Order is in the cross-border leg or, if required, is pending tax payment from the consignee. |\n        | Customs Cleared                       |  NO                 | Order is ready for pickup from a customs warehouse. | \n        | Customs Held                          |  NO                 | Order is in a customs clearance exception. | \n        | Completed                             |  YES                | Driver marks the parcel as delivered. |\n        | Successful Delivery                   |  YES                | Driver marks the parcel as delivered. |\n        | Returned to Sender                    |  YES                | After repeated failed deliveries, the order is sent back to the sender. |\n        | Cancelled                             |  YES                | Order is cancelled successfully. |\n\n      # Receive a webhook\n  \n      After you registered a webhook URL with Ninja Van, we will issue an HTTP POST request to the specified URL every time an event occurs.\n      The request's POST parameters contain XML/JSON data relevant to the event that triggered the request.\n\n      ## Example: receive a Pickup Fail webhook\n\n      A Pickup Fail webhook is sent after a pickup for a return or C2C order has failed. The\n      webhook contains the Pickup Fail reason in the `comments` field. For example:\n\n      ```\n      {\n        \"comments\": \"No parcels to pick up at all\"\n      }\n      ```\n\n      This table shows possible reasons.\n\n      | Reason     | Description |\n      |-------------------------|----------|\n      | Nobody at Location      | No one was present at the pickup location. |\n      | Inaccurate Address      | Couldn't find the pickup location. |\n      | Parcel Not available    | Item wasn't available at the pickup location, typically because the shipper unexpectedly ran out of stock, or packing got delayed. |\n      | Parcel Too Bulky        | Parcel was too bulky to be picked up, typically because the size of the parcel was misreported. |\n      | Cancellation Requested  | Pickup was cancelled upon request of the shipper. For some reason, the shipper did not want to fulfill the order at all. |\n\n      The reasons may differ based on the country. For a complete list, contact your Account Manager.\n\n      ## Example: receive a Pending Reschedule webhook\n\n      A Pending Reschedule webhook is sent after a delivery for a normal order has failed. The\n      webhook contains the Pending Reschedule reason in the `comments` field. For example:\n\n      ```\n      {\n      \"comments\": \"Nobody at Location\"\n      }\n      ```\n\n      This list shows possible reasons:\n      * Address is correct but customer is not available         \n      * Customer requested change of delivery date / time\n      * Customer requested change of delivery location\n      * Address on AWB is correct\n      * Address on AWB is incorrect\n      * Address was outside of driver coverage area\n      * I had insufficient time to complete all my deliveries\n      * Vehicle breakdown\n      * Delay due to unexpected traffic conditions\n      * Delay due to natural disasters or nationwide emergencies\n      * Unattempted - Parcel Issues\n      * Office address, closed\n      * Office address, open but no one to receive\n      * Residential address, but no one to receive\n      * Package is fine - unable to collect COD\n      * Package is fine - Customer wishes to cancel order\n      * Package is defective - Damaged\n      * Package is defective - Wrong item inside\n      * Location is inaccessible (restricted area)\n      * Refused entry by security personnel\n      * Driver cannot find location (lat-long issues)\n      * Incomplete Address provided (no unit number, block number, etc.)\n      * Specified Address was incorrect or Recipient has moved\n\n      The reasons may differ based on the country. For a complete list, contact your Account Manager.\n\n      ## Example: receive an RTS webhook\n\n      A Return to Sender (RTS) webhook is sent after an order was delivered back to the shipper.\n      The webhook contains the RTS reason in the `comments` field. For example:\n\n      ```\n      {\n      \"comments\": \"Return to Sender: Customer delayed beyond delivery period\"\n      }\n      ```\n\n      This table shows possible reasons.        \n\n      | Reason                              | Description |\n      |------------------------------------------|-------------|\n      | Nobody at Location                       | No one was present at the delivery location.                     |\n      | Unable to find Address                   | Couldn't find the delivery location. |\n      | Item refused at Doorstep                 | Item was refused at the delivery location. |\n      | Refused to pay COD                       | Customer requested for delivery reschedule at a date far in the future (for example, 1 month later) or the delivery failed three times. A failure of three times includes two attempts that were rescheduled by the customer. |\n      | Customer delayed beyond delivery period  | Order was cancelled by the shipper. | \n\n      The reasons may differ based on the country. For a complete list, contact your Account Manager.\n\n      ## Sample webhook payloads\n  \n      This section shows sample JSON payloads for different webhooks.\n  \n      **Pending Pickup**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"Pending Pickup\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T07:00:00+0700\",\n        \"id\": \"d4dcfea1-5286-4921-8fd3-7ded133f8579\",\n        \"tracking_id\": \"DX149431\"\n      }\n      ```\n  \n      **Successful Pickup**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"Successful Pickup\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T07:02:56+0700\",\n        \"id\": \"f48f68c1-4665-43df-8d1e-2628bbccfde7\",\n        \"previous_status\": \"Pending Pickup\",\n        \"tracking_id\": \"DX149431\"\n      }\n      ```\n  \n      **En-route to Sorting Hub**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"En-route to Sorting Hub\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T08:00:08+0800\",\n        \"id\": \"71acd28a-31d2-4035-b903-6a5fb471c8c1\",\n        \"previous_status\": \"Pending Pickup\",\n        \"tracking_id\": \"DX149431\"\n      }\n      ```\n\n      **Arrived at Sorting Hub**\n  \n      ``` \n      {\n        \"shipper_id\":11111,\n        \"status\": \"Arrived at Sorting Hub\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T08:00:03+0800\",\n        \"id\": \"81bc7a66-5d3d-450c-b2f9-c582488a4977\",\n        \"previous_status\": \"En-route to Sorting Hub\",\n        \"tracking_id\": \"DX149431\",\n        \"comments\": \"PH-CABUYAO-WH-CBY2\"\n      } \n      ```\n  \n      **On Vehicle for Delivery**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"On Vehicle for Delivery\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T07:00:01+0700\",\n        \"id\": \"5a476158-2b2a-46b7-a7b5-ce89537e183c\",\n        \"previous_status\": \"Arrived at Sorting Hub\",\n        \"tracking_id\": \"DX149431\",\n        \"comments\": \"ID-BANDUNG-Gunung Halu\"\n      }\n      ```\n  \n      **Pending Reschedule**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"Pending Reschedule\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T07:01:00+0700\",\n        \"id\": \"03e14080-5fe0-44b3-8762-4714cd5796c7\",\n        \"previous_status\": \"On Vehicle for Delivery\",\n        \"tracking_id\": \"DX149431\",\n        \"comments\": \"Penerima belum dapat membayar COD\"\n      }\n      ```\n  \n      **Pickup Fail**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"Pickup fail\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T08:04:18+0800\",\n        \"id\": \"38ecffa6-4c5c-4111-9eba-827929281191\",\n        \"previous_status\": \"Pending Pickup\",\n        \"tracking_id\": \"DX149431\",\n        \"comments\": \"No parcels to pick up at all\"\n      }\n      ```\n  \n      **First Attempt Delivery Fail**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"First Attempt Delivery Fail\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T08:01:42+0800\",\n        \"id\": \"d8cf8ba5-c081-4d7e-8eaf-0bbad23e1bc5\",\n        \"previous_status\": \"On Vehicle for Delivery\",\n        \"tracking_id\": \"DX149431\",\n        \"comments\": \"Customer requested change of delivery date / time\"\n      }\n      ```\n  \n      **On Vehicle for Delivery (RTS)**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"On Vehicle for Delivery (RTS)\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T07:00:01+0700\",\n        \"id\": \"bc7a1155-a605-47de-b5ee-4ba3b79b2ac6\",\n        \"previous_status\": \"Arrived at Sorting Hub\",\n        \"tracking_id\": \"DX149431\",\n        \"comments\": \"ID-BANDUNG-Gunung Halu\"\n      }\n      ```\n\n      **Returned to Sender**\n  \n      ``` \n      {\n        \"shipper_id\":11111,\n        \"status\": \"Returned to Sender\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T07:00:31+0700\",\n        \"id\": \"f7dc0151-e2be-45e3-99aa-686adaf21491\",\n        \"previous_status\": \"On Vehicle for Delivery\",\n        \"tracking_id\": \"DX149431\"\n      }\n      ```\n\n      **Arrived at Distribution Point**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"Arrived at Distribution Point\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T09:31:44+0800\",\n        \"id\": \"449d32e2-e562-481e-8df6-1a881b5c8ee4\",\n        \"previous_status\": \"On Vehicle for Delivery\",\n        \"tracking_id\": \"DX149431\"\n      }\n      ```\n  \n      **Return to Sender Triggered**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"Return to Sender Triggered\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-02-28T22:45:28+0700\",\n        \"id\": \"92327a00-81dd-42e2-9a03-f6dc9661d612\",\n        \"previous_status\": \"Arrived at Sorting Hub\",\n        \"tracking_id\": \"DX149431\",\n        \"comments\": \"Return to sender: Item refused at doorstep\"\n      }\n      ```\n\n      **Pending Pickup at Distribution Point**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"Pending Pickup at Distribution Point\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T08:00:58+0800\",\n        \"id\": \"e25da9cc-cb72-45ad-bee9-84aa65d76ff8\",\n        \"previous_status\": \"Pending Pickup\",\n        \"tracking_id\": \"DX149431\"\n      }\n      ```\n\n      **Van En-route to Pickup**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"Van en-route to pickup\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T08:00:34+0800\",\n        \"id\": \"7018b0a8-c859-43c8-8a2d-d6f74c3022d6\",\n        \"previous_status\": \"Pending Pickup\",\n        \"tracking_id\": \"DX149431\"\n      }\n      ```\n\n      **Parcel Size**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"Parcel Size\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T08:05:03+0800\",\n        \"order_id\": \"046d4137-cf27-4a27-8dbe-17dc1c36b56d\",\n        \"tracking_id\": \"DX149431\",\n        \"previous_size\": \"SMALL\",\n        \"new_size\": \"LARGE\"\n      }\n      ```\n      \n      **Parcel Weight**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"Parcel Weight\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T07:00:47+0700\",\n        \"order_id\": \"bbeab811-05e1-4528-bad7-28f5ec181a9f\",\n        \"tracking_id\": \"DX149431\",\n        \"previous_weight\": \"7.951986465396632\",\n        \"new_weight\": \"7.582490156526532\"\n      }\n      ```\n      **Parcel Measurements Update**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"Parcel Measurements Update\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T08:00:39+0800\",\n        \"order_id\": \"5c858b67-c233-4897-ae59-5a78b34afbc4\",\n        \"tracking_id\": \"DX149431\",\n        \"previous_measurements\":{\n            \"width\":10.0,\n            \"height\":10.0,\n            \"length\":10.0,\n            \"size\": \"M\",\n            \"volumetric_weight\":0.29,\n          \"measured_weight\":1.6918909689116224\n        },\n        \"new_measurements\":{\n            \"width\":10.0,\n            \"height\":10.0,\n            \"length\":10.0,\n            \"size\": \"S\",\n            \"volumetric_weight\":0.29,\n            \"measured_weight\":1.4299700569420262\n        }\n      }\n      ```\n\n      **Completed**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"Completed\",\n        \"shipper_ref_no\": \"DX149431\",\n        \"tracking_ref_no\": \"DX149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T07:00:22+0700\",\n        \"id\": \"6698241b-18ac-4a3b-a258-a506a85989bd\",\n        \"previous_status\": \"On Vehicle for Delivery\",\n        \"tracking_id\": \"DX149431\",\n        \"comments\": \"Receiver: Astty Oktavia Daeni\"\n      }\n      ```\n  \n      **Successful Delivery**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"Successful Delivery\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T08:00:04+0800\",\n        \"id\": \"2185a893-cd92-42ca-b52a-227cff1bd25a\",\n        \"previous_status\": \"On Vehicle for Delivery\",\n        \"tracking_id\": \"DX149431\",\n        \"pod\":{\n            \"type\": \"RECIPIENT\",\n            \"name\": \"Claire bautista\",\n            \"identity_number\": \"\",\n            \"contact\": \"+639233114933\",\n            \"uri\": \"\",\n            \"left_in_safe_place\": false\n          }\n      }\n      ```\n      \n      **Cancelled**\n  \n      ```\n      {\n        \"shipper_id\":11111,\n        \"status\": \"Cancelled\",\n        \"shipper_ref_no\": \"149431\",\n        \"tracking_ref_no\": \"149431\",\n        \"shipper_order_ref_no\": \"8374\",\n        \"timestamp\": \"2021-03-01T07:00:44+0700\",\n        \"id\": \"65994763-20c8-4067-aa44-1da75e8229df\",\n        \"previous_status\": \"Pending Pickup\",\n        \"tracking_id\": \"DX149431\",\n        \"comments\": \"Cancellation reason : API CANCELLATION REQUEST\"\n      }\n      ```\n      \n      # Verify a webhook\n      Ninja Van passes along a digital signature with each request in the `X-Ninjavan-Hmac-SHA256` header. The signature is generated with the HMAC algorithm, using your [Client Secret](#section/Introduction/Authentication) as a key and SHA256 digest mode.\n\n      When you receive a request, compute the HMAC digest according to the\n      following algorithm and compare it to the value in the `X-Ninjavan-Hmac-SHA256` header. If they\n      match, the webhook was sent from Ninja Van and the data has not been compromised.\n  \n      Following are webhook verification examples in different languages.\n  \n      **PHP**\n  \n      ```\n        \n      <?php\n      \n      define('CLIENT_SECRET', 'insert-your-client-secret-here');\n      $data = file_get_contents('php://input');\n  \n      function verify_webhook($data, $hmac_header){\n      $calculated_hmac = base64_encode(hash_hmac('sha256', $data , CLIENT_SECRET, true));\n      echo $calculated_hmac;\n      return ($hmac_header == $calculated_hmac);\n      }\n   \n      $hmac_header = 'Ru6nS2bSEPRaRAq+GM0cMMvVxyFz8sVkKjSI6rD1jgY=';\n   \n      $verified = verify_webhook($data, $hmac_header);\n   \n      ?>\n       \n      ```\n  \n  \n      **Ruby**\n  \n      ```\n        \n      require 'openssl'\n      require 'base64'\n      //>\n      hash = OpenSSL::HMAC.digest('sha256', 'INSERT-YOUR-CLIENT-SECRET-HERE', 'INSERT-YOUR-JSON-BODY-HERE')\n  \n      puts hash\n      hashedValue = Base64.encode64(hash)\n      puts hashedValue\n       \n      ```\n  \n      **Go**\n  \n      ```\n        \n      package main\n   \n      import (\n        \"crypto/hmac\"\n        \"crypto/sha256\"\n        \"encoding/base64\"\n        \"fmt\"\n      )\n   \n      func verifyWebhook(body string, secret string) string {\n        key := []byte(secret)\n        h := hmac.New(sha256.New, key)\n        h.Write([]byte(body))\n        return base64.StdEncoding.EncodeToString(h.Sum(nil))\n      }\n   \n      func main() {\n        fmt.Println(verifyWebhook(\"INSERT-YOUR-JSON-BODY-HERE\", \"INSERT-YOUR-CLIENT-SECRET-HERE\"))\n      }\n       \n      ```\n  \n      **Node JS**\n  \n      Prerequisite: install the [crypto-js](https://www.npmjs.com/package/crypto-js) dependency.\n  \n      ```\n      //NodeJS\n   \n      const HMACSHA256 = require(\"crypto-js/hmac-sha256\");\n      const BASE64 = require('crypto-js/enc-base64');\n   \n      const calculatedHmac = BASE64.stringify(HMACSHA256('INSERT-YOUR-JSON-BODY-HERE', 'INSERT-YOUR-CLIENT-SECRET-HERE'));\n      console.log(calculatedHmac);\n      ```\n\n\n      **C#**\n  \n      ```\n      using System;\n      using System.Text;\n      using System.Collections.Generic;\n      using System.Linq;\n      using System.IO;\n      using System.Text.RegularExpressions;\n      using System.Security.Cryptography;\n      \n      namespace WebhookTester\n      {\n          public class Program\n          {\n              public static void Main(string[] args)\n              {\n                  //Your code goes here\n                  string clientSecret = \"INSERT-YOUR-CLIENT-SECRET-HERE\";\n                  string jsonBody = \"INSERT-YOUR-JSON-BODY-HERE\";\n                  string calculatedHmac = calculateHmac(jsonBody, clientSecret);\n                  Console.WriteLine(verifyWebhook(calculatedHmac,\"HMAC-HEADER-RECEIVED-IN-REQUEST\"));\n                  \n              }\n              \n              static string calculateHmac(string jsonBody, string clientSecret)\n              {\n                  Encoding encoding = Encoding.UTF8;\n                  var key = encoding.GetBytes(clientSecret);\n                  HMACSHA256 hmacsha256 = new HMACSHA256(key);\n                  var byteArray = encoding.GetBytes(jsonBody);\n                  var result = hmacsha256.ComputeHash(byteArray);\n                  return Convert.ToBase64String(result);    \n              }\n              \n              static bool verifyWebhook(string calculatedHmac, string hmacHeader)\n              {\n                return calculatedHmac.Equals(hmacHeader);\n              }\n          }\n      \n      }\n      ```\n\n\n      **Java** \n\n      Using library [Apache Common Codec](https://commons.apache.org/proper/commons-codec/)\n  \n      ```\n        \n      import java.security.InvalidKeyException;\n      import java.security.NoSuchAlgorithmException;\n      import javax.crypto.Mac;\n      import javax.crypto.spec.SecretKeySpec;\n      import org.apache.commons.codec.binary.Base64;\n\n\n      public class MyClass {\n          public static String calculateHmac(String message, String secret) throws InvalidKeyException, NoSuchAlgorithmException {\n              String algorithm = \"HmacSHA256\";\n              Mac sha256_HMAC = Mac.getInstance(algorithm);\n              SecretKeySpec secret_key = new SecretKeySpec(secret.getBytes(), algorithm);\n              sha256_HMAC.init(secret_key);\n              return Base64.encodeBase64String(sha256_HMAC.doFinal(message.getBytes()));\n          }\n\n          public static Boolean verifyWebhook(String calculatedHmac, String hmacHeader)\n          {\n              return calculatedHmac.equals(hmacHeader);\n          }\n\n          public static void main(String[] args) {\n              String clientSecret = \"INSERT-YOUR-CLIENT-SECRET-HERE\";\n              String jsonBody = \"INSERT-YOUR-JSON-BODY-HERE\";\n              try {\n                  String calculatedHmac = calculateHmac(jsonBody, clientSecret);\n                  System.out.println(verifyWebhook(calculatedHmac,\"HMAC-HEADER-RECEIVED-IN-REQUEST\" ));\n              } catch (Exception e) {\n                  System.out.println(\"Error: \" + e);\n              }\n          }\n      }\n       \n      ```\n\n  \n      # Respond to a webhook\n      To acknowledge receipt of a webhook, your endpoint must return an HTTP `200 OK` status code. Any response outside of\n      the `2xx` range suggests to Ninja Van that you didn't receive your webhook. To this end, Ninja Van\n      implemented a 5-second timeout period and a retry period for subscriptions.\n  \n      You should monitor your application for failing webhooks. If you're receiving a Ninja Van webhook,\n      the most important thing to do is respond quickly.\n      \n      We recommend that apps defer processing until after the response has been sent. To ensure that\n      webhooks are not sent repeatedly even after you received them, respond with a `200 OK`\n      status code before carrying on with any further in-house webhook processing.\n\n      **Note:** If we notice that too many webhooks are rejected or not acknowledged, \n      you will get blocked and stop receiving webhooks from us. So make sure to monitor\n      your application for failing webhooks. As soon as you can acknowledge our webhooks with\n      a `200 OK` status code, you will continue receiving webhooks for subsequent events.\n\n      # Configure a webhook\n\n      The trouble with testing your webhooks through the API is that you need a publicly visible URL to\n      handle them. Unlike client-side redirects, webhooks originate directly from the server. This means\n      that you can't use the following as an endpoint in your testing environment:\n      * Localhost\n      * Any URL ending with the word \"internal\" (such as thisshop.com/internal)\n      * Fictitious domains, such as www.example.com\n      \n      Fortunately, there are a couple of tools that make working with webhooks during development\n      much easier. Among them RequestBin, Pagekite, and ngrok.\n\n      # What if everything blows up?\n\n      Say, your hosting center has exploded and your app has been offline for a long time. Don't worry—Ninja Van keeps sending webhooks at an exponentially increasing\n      time interval for a particular event, 48 hours after the event occurrence time. After this 48-hour time\n      window, we'll drop the webhook. Ensure that your services have the capacity to handle all\n      incoming webhooks as and when you go online.\n\n  - name: Reference\n    description: |+\n      # FAQ\n      ## OAuth API\n      ### 1. Where can I find the Client ID and Client Secret?\n      The Client ID and Client Secret are available in your Ninja Dashboard account. If you don't have access\n      to Dashboard, contact your Account Manager.\n\n      ### 2. Can I use the same Client ID and Client Secret for sandbox and production?\n      No, because Ninja Dashboards in the sandbox and production environments are different, and they use different credentials. \n      To obtain a Client ID and Client Secret for production, log in to your production Dashboard, same way as you would do for sandbox. \n      If you don't have access to Dashboard in production, contact your Account Manager.\n      \n      ### 3. Should I regenerate the Client ID and Client Secret in my Ninja Dashboard account after I get access to production?\n      You don't need to regenerate the Client ID and Client Secret. But make sure to regenerate your token\n      after you're granted access to the production environment.\n\n      ### 4. I just received integration audit approval but I'm still encountering authentication issues. Why?\n      You need to generate new access tokens for production after you've got the audit approval. See [Get access to production](#section/Get-started/Get-access-to-production).\n\n      ## Order API\n      ### 1. Can I submit orders for my integration audit using Postman or any API testing tool?\n      No. The purpose of an integration audit is to verify that your integrated system meets the necessary requirements. So \n      we expect shippers to submit orders via an integrated workflow that uses our APIs.\n      \n      ### 2. What are the prerequisites for testing the APIs?\n      To test the APIs, you need to have the following:\n      1. Ninja Van Postpaid Pro account.\n      2. Access to Ninja Dashboard.\n\n      ### 3. I'm trying to create an order via the API, but I received a 403 status code. How do I resolve it?\n      If the Order API returns an HTTP `403` status code, then you don't have the required permissions to access the API. To troubleshoot, check the following:\n\n      * **Sandbox:** Check that you're sending requests to the sandbox URL with the country code `sg`: `https://api-sandbox.ninjavan.co/sg`. This is because Ninja Van only supports the Singapore sandbox API.\n      * **Production:** You won't have access to any API in the production environment until our developer support team reviews your integration. If you passed the integration audit and the API still returns a `403` status code, then verify that you're using the correct URL with the country code: `https://api.ninjavan.co/{countryCode}/4.1/orders`.\n\n      ## Webhooks\n      ### 1. Can I test webhooks in the sandbox environment?\n      The only webhooks that can be tested in the sandbox environment are Pending Pickup\n      and Cancelled webhooks. All the other webhooks require operational activities that aren't feasible in sandbox.\n\n      ### 2. I create orders via Ninja Dashboard and want to subscribe to webhooks. Do I need to complete an integration audit?\n      No. An integration audit is required only if you need access to our production APIs. As a Dashboard user, you need to first generate a Client ID and Client Secret, \n      and then directly subscribe to the webhooks and receive updates for your orders.\n\n      # Errors\n      ## Error glossary\n\n      Ninja Van APIs return standard HTTP status codes. For errors, we also include extra information about what went wrong encoded in the response as JSON. The various HTTP status codes we may return are listed in this section.\n\n      | Status code | Description |\n      |-------|-------------------|\n      | `400` | **Bad Request**<br>Your request couldn't be processed.<br><br>**Invalid Data**<br>Your request failed our validation.<br><br>These status codes generally contain a descriptive message, which helps you troublehsoot the error. See [Common error messages](#section/Errors/Common-error-messages). |\n      | `401` | **Unauthorized**<br>The access token is either invalid or expired. For more information about access tokens, see [Authentication](#section/Introduction/Authentication). |\n      | `403` | **Forbidden**<br>You don't have the required permissions to access the API. Following are the possible causes for this error.<br><br>- You're not using the correct sandbox URL. Ninja Van only supports the Singapore sandbox API, so all requests must be sent to the country code `sg`: `https://api-sandbox.ninjavan.co/sg`.<br><br>- You haven't passed the integration audit. You won't have access to any API in the production environment until our developer support team reviews your integration. If you passed the integration audit and the API still returns a `403` status code, then verify that you're using the correct URL with the country code: `https://api.ninjavan.co/{countryCode}/4.1/orders`.<br><br>- You're trying to access the waybill generation endpoint without a prior request. For more information, see [How to request access](#tag/Order-API/paths/~1{countryCode}~12.0~1reports~1waybill/get).<br><br>**The shipper's account is frozen and cannot be used.**<br>Your account has been frozen due to outstanding fees. To unfreeze the account, clear all due fees and contact your Account Manager for assistance. |\n      | `429` | **API rate limit exceeded**<br>You've exceeded the request limit and got temporarily blocked from accessing the API. The block will be removed after a few hours, after which you can access the API again. |\n      | `5xx` | **Internal Server Error**<br>These status codes are rare, and may happen for a small percentage of orders during peak periods. If the API returns a `5xx` status code, retry your request after some time. We encourage you to have a retry mechanism in place. |\n\n      ## Common error messages\n      This section describes common error messages for HTTP `400` status code returned by our APIs. If the error that you encountered isn't mentioned, try to resolve it based on the information in the response. If you still need help, send an email with the error details to [developer support](#section/Introduction/Contact-information).\n\n      ### Order API\n      #### Service level not supported\n      \n      **Error message:** Service Level is not supported for this shipper account.\n\n      **Cause:** The service is not enabled in your account.\n\n      **Suggested action:** To enable the service, contact your Account Manager.\n      \n      **Sample error response**\n      ```\n      {\n        \"error\":\n          {\n            \"request_id\": \"1ba6da4f-0709-416e-9e30-a5546130b4d2\",\n            \"title\": \"Invalid Data\",\n            \"message\": \"Please check your request payload for validation errors.\",\n            \"details\":[\n              {\n                \"reason\": \"Validation Error\",\n                \"field\": \"null\",\n                \"message\": \"Service Level is not supported for this shipper account.\"\n              }\n            ]\n          }\n      }\n      ```\n\n      #### UTF extended charset not supported\n\n      **Error code:** 127014\n      \n      **Error message:** Invalid charset! UTF Extended charset is not supported\n\n      **Cause:** The request payload contains special characters that include symbols, emojis, and so on.\n\n      **Suggested action:** Remove these characters and try again.\n      \n      **Sample error response**\n\n      ```\n      {\n        \"error\":\n          {\n            \"code\": \"127014\",\n            \"title\": \"Bad Request\",\n            \"message\": \"Invalid charset! UTF Extended charset is not supported\"\n          }\n      }\n      ```\n\n      #### Duplicate tracking ID\n\n      **Error code:** 109201\n      \n      **Error message:** Tracking ID (123456789) has been used, please use a different tracking ID and try again\n\n      **Cause:** You already created an order with this tracking ID.\n\n      **Suggested action:** Use a unique `requested_tracking_number` for each order.\n      \n      **Sample error response**\n\n      ```\n      {\n        \"error\": {\n          \"code\": 109201,\n          \"request_id\": \"1ba6da4f-0709-416e-9e30-a5546130b4d2\",\n          \"title\": \"Duplicate Tracking ID\",\n          \"message\": \"Tracking ID (123456789) has been used, please use a different tracking ID and try again\"\n          }\n      }\n      ```\n\n      #### Invalid pickup or delivery time slot\n      \n      **Error message:** Invalid timeslot provided. Please check the API docs for a list of valid time slots.\n\n      **Cause:** You provided an invalid pickup or delivery time slot.\n\n      **Suggested action:** Specify valid time slots in `parcel_job.pickup_timeslot` and `parcel_job.delivery_timeslot`, and try again.\n      \n      **Sample error response**\n\n      ```\n      {\n        \"error\": {\n          \"request_id\": \"1ba6da4f-0709-416e-9e30-a5546130b4d2\",\n          \"title\": \"Invalid Data\",\n          \"message\": \"Please check your request payload for validation errors.\",\n          \"details\": [\n          {\n            \"reason\": \"Validation Error\",\n            \"message\": \"Invalid timeslot provided. Please check the API docs for a list of valid time slots.\"\n          }\n          ]\n        }\n      }\n      ```\n      \n      #### Contact information not provided\n      \n      **Error message:** Invalid contact information. Please provide either a 'email' or 'phone_number'.\n\n      **Cause:** You didn't provide any contact information.\n\n      **Suggested action:** Specify either the `email` or `phone_number`, and try again.\n      \n      **Sample error response**\n\n      ```\n      {\n        \"error\": {\n          \"request_id\": \"1ba6da4f-0709-416e-9e30-a5546130b4d2\",\n          \"title\": \"Invalid Data\",\n          \"message\": \"Please check your request payload for validation errors.\",\n          \"details\": [\n            {\n              \"reason\": \"Validation Error\",\n              \"field\": null,\n              \"message\": \"'Invalid contact information. Please provide either a 'email' or 'phone_number'.\"\n            }\n          ]\n        }\n      }\n      ```\n\n      #### Dimension information not provided\n      \n      **Error message:** At least a form of dimension must be provided. Please check with your shipper support team to see which one you should be providing.\n\n      **Cause:** You didn't provide any dimensions.\n\n      **Suggested action:** Specify at least one of following dimensions.\n      1. Size: `parcel_job.dimensions.size`\n      2. Weight: `parcel_job.dimensions.weight`\n      3. Length, width, and height: `parcel_job.dimensions.length`, `parcel_job.dimensions.width`, and `parcel_job.dimensions.height`.\n      \n      **Sample error response**\n\n      ```\n      {\n        \"error\": {\n        \"request_id\": \"1ba6da4f-0709-416e-9e30-a5546130b4d2\",\n        \"title\": \"Invalid Data\",\n        \"message\": \"Please check your request payload for validation errors.\",\n        \"details\": [\n          {\n            \"reason\": \"Validation Error\",\n            \"message\": \"At least a form of dimension must be provided. Please check with your shipper support team to see which one you should be providing.\",\n            \"field\": \"parcel_job.dimensions\"\n          }\n        ]\n        }\n      }\n      ```\n\n      #### Invalid requested tracking prefix\n      \n      **Error message:** The 'requested_tracking_number' field must start with the correct prefix.\n\n      **Cause:** The `requested_tracking_number` field doesn't contain the prefix configured for your account.\n\n      **Suggested action:** Check with your Account Manager on the prefix configured, and use the right prefix.\n      \n      **Sample error response**\n\n      ```\n      {\n        \"error\": {\n        \"request_id\": \"1ba6da4f-0709-416e-9e30-a5546130b4d2\",\n        \"title\": \"Invalid Data\",\n        \"message\": \"Please check your request payload for validation errors.\",\n        \"details\": [\n          {\n            \"reason\": \"Validation Error\",\n            \"field\": null,\n            \"message\": \"The 'requested_tracking_number' field must start with the correct prefix.\"\n          }\n          ]\n        }\n      }\n      ```\n\n      #### Invalid requested tracking number\n      \n      **Error message:** The 'requested_tracking_number' field must be between 1 and 9 characters (please do not pass a prefix), and can contain alphanumeric characters, and the (-) dash symbol.\n\n      **Cause:** You provided the wrong format for the requested_tracking_number field.\n\n      **Suggested action:** Check whether you are using the correct format, and try again.\n      \n      **Sample error response**\n\n      ```\n      {\n        \"error\": {\n        \"request_id\": \"1ba6da4f-0709-416e-9e30-a5546130b4d2\",\n        \"title\": \"Invalid Data\",\n        \"message\": \"Please check your request payload for validation errors.\",\n        \"details\": [\n          {\n            \"reason\": \"Validation Error\",\n            \"field\": null,\n            \"message\": \"The 'requested_tracking_number' field must be between 1 and 9 characters (please do not pass a prefix), and can contain alphanumeric characters, and the (-) dash symbol.\"\n          }\n          ]\n        }\n      }\n      ```\n\n      # Sample order creation requests\n      This section provides sample order creation payloads for pre-determined business scenarios.\n      ## Standard parcels\n      In this scenario, an e-commerce platform sends Standard parcels.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | Parcel | For sending orders, the corresponding order type is `Parcel`. |\n        | service_level | Standard | Used for SLA calculations. |\n        | parcel_job | JSON | Required because the order type is `Parcel`. |\n        \n\n      ```\n      {\n        \"service_type\": \"Parcel\",\n        \"service_level\": \"Standard\",\n        \"requested_tracking_number\": \"1234-56789\",\n        \"reference\":{\n            \"merchant_order_number\": \"ship-123\"\n        },\n        \"from\":{\n            \"name\": \"John Doe\",\n            \"phone_number\": \"+6563337193\",\n            \"email\": \"john.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"30 Jln Kilang Barat\",\n              \"address2\": \"\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"to\":{\n            \"name\": \"Jane Doe\",\n            \"phone_number\": \"+6502700553\",\n            \"email\": \"jane.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"30 Jln Kilang Barat\",\n              \"address2\": \"\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"parcel_job\":{\n            \"is_pickup_required\":false,\n            \"delivery_start_date\": \"2021-12-16\",\n            \"delivery_timeslot\":{\n              \"start_time\": \"09:00\",\n              \"end_time\": \"22:00\",\n              \"timezone\": \"Asia/Singapore\"\n            },\n            \"delivery_instructions\": \"Please be careful with the v-day flowers.\",\n            \"dimensions\":{\n              \"weight\":1.0,\n              \"size\": \"L\"\n            }\n        }\n      }\n      ```\n\n\n      ## Standard parcels with a pickup\n      In this scenario, an e-commerce platform sends Standard parcels that require a pickup.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `Parcel` | For sending orders, the corresponding order type is `Parcel`. |\n        | service_level | `Standard` | Used for SLA calculations. |\n        | parcel_job | JSON | Required because the order type is `Parcel`. |\n        | parcel_job.is_pickup_required | BOOLEAN | If you require a pickup, then set this to `true`. |\n        | parcel_job.pickup_address_id | STRING | Optional, but when provided, Ninja Van syncs your address book for easier pickup management. |\n        \n\n      ```  \n      {\n        \"service_type\": \"Parcel\",\n        \"service_level\": \"Standard\",\n        \"requested_tracking_number\": \"1234-56789\",\n        \"reference\":{\n            \"merchant_order_number\": \"ship-123\"\n        },\n        \"from\":{\n            \"name\": \"John Doe\",\n            \"phone_number\": \"+6563337193\",\n            \"email\": \"john.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"30 Jln Kilang Barat\",\n              \"address2\": \"\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"to\":{\n            \"name\": \"Jane Doe\",\n            \"phone_number\": \"+6502700553\",\n            \"email\": \"jane.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"30 Jln Kilang Barat\",\n              \"address2\": \"\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"parcel_job\":{\n            \"is_pickup_required\":true,\n            \"pickup_service_type\": \"Scheduled\",\n            \"pickup_service_level\": \"Standard\",\n            \"pickup_address_id\": \"123456\",\n            \"pickup_date\": \"2021-12-15\",\n            \"pickup_timeslot\":{\n              \"start_time\": \"09:00\",\n              \"end_time\": \"18:00\",\n              \"timezone\": \"Asia/Singapore\"\n            },\n            \"delivery_start_date\": \"2021-12-16\",\n            \"delivery_timeslot\":{\n              \"start_time\": \"09:00\",\n              \"end_time\": \"22:00\",\n              \"timezone\": \"Asia/Singapore\"\n            },\n            \"delivery_instructions\": \"Please be careful with as the packages are heavy\",\n            \"dimensions\":{\n              \"weight\":1.0,\n              \"size\": \"L\"\n            }\n        }\n      }\n      ```\n\n      \n      ## Standard parcels with cash on delivery\n      In this scenario, an e-commerce platform sends Standard parcels with the payment term \"cash on delivery\" (COD).\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `Parcel` | For sending orders, the corresponding order type is `Parcel`. |\n        | service_level | `Standard` | Used for SLA calculations. |\n        | parcel_job | JSON | Required because the order type is `Parcel`. |\n        | parcel_job.cash_on_delivery | DECIMAL | This is the cash amount that Ninja Van's drivers and riders will collect from the recipient upon delivery. |\n\n\n      ```\n      {\n        \"service_type\": \"Parcel\",\n        \"service_level\": \"Standard\",\n        \"requested_tracking_number\": \"1234-56789\",\n        \"reference\":{\n            \"merchant_order_number\": \"ship-123\"\n        },\n        \"from\":{\n            \"name\": \"John Doe\",\n            \"phone_number\": \"+6563337193\",\n            \"email\": \"john.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"30 Jln Kilang Barat\",\n              \"address2\": \"\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"to\":{\n            \"name\": \"Jane Doe\",\n            \"phone_number\": \"+6502700553\",\n            \"email\": \"jane.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"30 Jln Kilang Barat\",\n              \"address2\": \"\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"parcel_job\":{\n            \"cash_on_delivery\":200.00,\n            \"pickup_date\": \"2021-12-15\",\n            \"delivery_start_date\": \"2021-12-16\",\n            \"delivery_timeslot\":{\n              \"start_time\": \"09:00\",\n              \"end_time\": \"22:00\",\n              \"timezone\": \"Asia/Singapore\"\n            },\n            \"delivery_instructions\": \"Please be careful with as the packages are heavy\",\n            \"dimensions\":{\n              \"weight\":1.0,\n              \"size\": \"L\"\n            }\n        }\n      }\n      \n      ```\n\n      \n      ## Standard parcels dropped off at a Ninja Point\n      In this scenario, an e-commerce platform sends Standard parcels that will be dropped off at a Ninja Point.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `Parcel` | For sending orders, the corresponding order type is `Parcel`. |\n        | service_level | `Standard` | Used for SLA calculations. |\n        | parcel_job | JSON | Required because the order type is `Parcel`. |\n        | parcel_job.is_pickup_required | BOOLEAN | Either set this to `false`, or undefined. |\n        \n      ```\n      \n      {\n        \"service_type\": \"Parcel\",\n        \"service_level\": \"Standard\",\n        \"requested_tracking_number\": \"1234-56789\",\n        \"reference\":{\n            \"merchant_order_number\": \"ship-123\"\n        },\n        \"from\":{\n            \"name\": \"John Doe\",\n            \"phone_number\": \"+6563337193\",\n            \"email\": \"john.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"30 Jln Kilang Barat\",\n              \"address2\": \"\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"to\":{\n            \"name\": \"Jane Doe\",\n            \"phone_number\": \"+6502700553\",\n            \"email\": \"jane.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"30 Jln Kilang Barat\",\n              \"address2\": \"\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"parcel_job\":{\n            \"is_pickup_required\":false,\n            \"delivery_start_date\": \"2021-12-16\",\n            \"delivery_timeslot\":{\n              \"start_time\": \"09:00\",\n              \"end_time\": \"22:00\",\n              \"timezone\": \"Asia/Singapore\"\n            },\n            \"delivery_instructions\": \"Please be careful with as the packages are heavy\",\n            \"dimensions\":{\n              \"weight\":1.0,\n              \"size\": \"L\"\n            }\n        }\n      }\n      \n      ```\n\n      \n      ## Return parcels to a seller's warehouse with a pickup\n      In this scenario, a customer of an e-commerce platform returns a parcel to a seller's warehouse, with a pickup required.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `Return` | For returning parcels, the corresponding order type is `Return`. |\n        | service_level | `Standard` | Used for SLA calculations. |\n        | parcel_job | JSON | Required because the order type is `Return`. |\n        | parcel_job.is_pickup_required | BOOLEAN | If you require a pickup, then set this to `true`. |\n\n      ```\n      \n      {\n        \"service_type\": \"Return\",\n        \"service_level\": \"Standard\",\n        \"requested_tracking_number\": \"1234-56789\",\n        \"reference\":{\n            \"merchant_order_number\": \"ship-123\"\n        },\n        \"from\":{\n            \"name\": \"John Doe\",\n            \"phone_number\": \"+6563337193\",\n            \"email\": \"john.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"30 Jalan Kilang Barat\",\n              \"address2\": \"\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"to\":{\n            \"name\": \"Jane Doe\",\n            \"phone_number\": \"+6502700553\",\n            \"email\": \"jane.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"28 Jalan Kilang Barat\",\n              \"address2\": \"\",\n              \"country\": \"SG\",\n              \"postcode\": \"159362\"\n            }\n        },\n        \"parcel_job\":{\n            \"is_pickup_required\":true,\n            \"pickup_service_type\": \"Scheduled\",\n            \"pickup_service_level\": \"Standard\",\n            \"pickup_address\":{\n              \"name\": \"John Doe\",\n              \"phone_number\": \"+6563337193\",\n              \"email\": \"john.doe@gmail.com\",\n              \"address\":{\n                  \"address1\": \"30 Jalan Kilang Barat\",\n                  \"address2\": \"\",\n                  \"country\": \"SG\",\n                  \"postcode\": \"159363\"\n              }\n            },\n            \"pickup_address_id\": \"98989012\",\n            \"pickup_date\": \"2021-12-15\",\n            \"pickup_timeslot\":{\n              \"start_time\": \"09:00\",\n              \"end_time\": \"22:00\",\n              \"timezone\": \"Asia/Singapore\"\n            },\n            \"pickup_approximate_volume\": \"Half-Van Load\",\n            \"pickup_instruction\": \"Please be careful, the package is fragile\",\n            \"delivery_start_date\": \"2021-12-16\",\n            \"delivery_timeslot\":{\n              \"start_time\": \"09:00\",\n              \"end_time\": \"22:00\",\n              \"timezone\": \"Asia/Singapore\"\n            },\n            \"delivery_instructions\": \"Please be careful with the v-day flowers.\",\n            \"dimensions\":{\n              \"weight\":1.0,\n              \"size\": \"L\"\n            }\n        }\n      }\n      \n      ```\n\n      ## Return parcels to a seller's warehouse but dropped off at a Ninja Point\n      In this scenario, a customer of an e-commerce platform returns a parcel to a seller's warehouse by dropping it off at a Ninja Point.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `Return` | For returning parcels, the corresponding order type is `Return`. |\n        | service_level | `Standard` | Used for SLA calculations. |\n        | parcel_job | JSON | Required because the order type is `Return`. |\n        | parcel_job.is_pickup_required | BOOLEAN | Either set this to `false`, or undefined. |\n      \n      ```\n      \n      {\n        \"service_type\": \"Return\",\n        \"service_level\": \"Standard\",\n        \"requested_tracking_number\": \"1234-56789\",\n        \"reference\":{\n            \"merchant_order_number\": \"ship-123\"\n        },\n        \"from\":{\n            \"name\": \"John Doe\",\n            \"phone_number\": \"+6563337193\",\n            \"email\": \"john.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"30 Jln Kilang Barat\",\n              \"address2\": \"\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"to\":{\n            \"name\": \"Jane Doe\",\n            \"phone_number\": \"+6502700553\",\n            \"email\": \"jane.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"30 Jln Kilang Barat\",\n              \"address2\": \"\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"parcel_job\":{\n            \"is_pickup_required\":false,\n            \"delivery_start_date\": \"2021-12-16\",\n            \"delivery_timeslot\":{\n              \"start_time\": \"09:00\",\n              \"end_time\": \"22:00\",\n              \"timezone\": \"Asia/Singapore\"\n            },\n            \"delivery_instructions\": \"Please be careful with as the packages are heavy\",\n            \"dimensions\":{\n              \"weight\":1.0,\n              \"size\": \"L\"\n            }\n        }\n      }\n      \n      ```\n\n      \n      ## Express parcels\n      In this scenario, an e-commerce platform sends Express parcels.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `Parcel` | For sending orders, the corresponding order type is `Parcel`. |\n        | service_level | `Express` | Used for SLA calculations. |\n        | parcel_job | JSON | Required because the order type is `Parcel`. |\n        \n      ```\n      \n      {\n        \"service_type\": \"Parcel\",\n        \"service_level\": \"Express\",\n        \"requested_tracking_number\": \"1234-56789\",\n        \"reference\":{\n            \"merchant_order_number\": \"ship-123\"\n        },\n        \"from\":{\n            \"name\": \"John Doe\",\n            \"phone_number\": \"+60138201527\",\n            \"email\": \"john.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"17 Lorong Jambu 3\",\n              \"address2\": \"\",\n              \"area\": \"Taman Sri Delima\",\n              \"city\": \"Simpang Ampat\",\n              \"state\": \"Pulau Pinang\",\n              \"country\": \"MY\",\n              \"postcode\": \"51200\"\n            }\n        },\n        \"to\":{\n            \"name\": \"Jane Doe\",\n            \"phone_number\": \"+60103067174\",\n            \"email\": \"jane.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"Jalan PJU 8/8\",\n              \"address2\": \"\",\n              \"area\": \"Damansara Perdana\",\n              \"city\": \"Petaling Jaya\",\n              \"state\": \"Selangor\",\n              \"country\": \"MY\",\n              \"postcode\": \"47820\"\n            }\n        },\n        \"parcel_job\":{\n            \"is_pickup_required\":false,\n            \"delivery_start_date\": \"2021-12-16\",\n            \"delivery_timeslot\":{\n              \"start_time\": \"09:00\",\n              \"end_time\": \"22:00\",\n              \"timezone\": \"Asia/Kuala_Lumpur\"\n            },\n            \"delivery_instructions\": \"Please be careful with the v-day flowers.\",\n            \"dimensions\":{\n              \"weight\":1.0,\n              \"size\": \"L\"\n            }\n        }\n      }\n      \n      ```\n\n      \n      ## Standard Marketplace parcels\n      In this scenario, an e-commerce platform sends Standard Marketplace parcels.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `Marketplace` | Marketplaces require special *marketplace* data, so the order type must be `Marketplace`. |\n        | service_level | `Standard` | Used for SLA calculations. |\n        | parcel_job | JSON | Required because the order type is `Marketplace`. |\n        | marketplace | JSON | Required because the order type is `Marketplace`. |\n\n      ```\n      \n      {\n        \"service_type\": \"Marketplace\",\n        \"service_level\": \"Standard\",\n        \"requested_tracking_number\": \"1234-56789\",\n        \"reference\":{\n            \"merchant_order_number\": \"ship-123\"\n        },\n        \"from\":{\n            \"name\": \"John Doe\",\n            \"phone_number\": \"+60138201527\",\n            \"email\": \"john.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"17 Lorong Jambu 3\",\n              \"address2\": \"\",\n              \"area\": \"Taman Sri Delima\",\n              \"city\": \"Simpang Ampat\",\n              \"state\": \"Pulau Pinang\",\n              \"country\": \"MY\",\n              \"postcode\": \"51200\"\n            }\n        },\n        \"to\":{\n            \"name\": \"Jane Doe\",\n            \"phone_number\": \"+60103067174\",\n            \"email\": \"jane.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"Jalan PJU 8/8\",\n              \"address2\": \"\",\n              \"area\": \"Damansara Perdana\",\n              \"city\": \"Petaling Jaya\",\n              \"state\": \"Selangor\",\n              \"country\": \"MY\",\n              \"postcode\": \"47820\"\n            }\n        },\n        \"parcel_job\":{\n            \"is_pickup_required\":false,\n            \"delivery_start_date\": \"2021-12-16\",\n            \"delivery_timeslot\":{\n              \"start_time\": \"09:00\",\n              \"end_time\": \"22:00\",\n              \"timezone\": \"Asia/Kuala_Lumpur\"\n            },\n            \"delivery_instructions\": \"Please be careful with the v-day flowers.\",\n            \"dimensions\":{\n              \"weight\":1.0,\n              \"size\": \"L\"\n            }\n        },\n        \"marketplace\":{\n            \"seller_id\": \"4567\",\n            \"seller_company_name\": \"FlowersRUs\"\n        }\n      }\n      \n      ```\n\n      \n      ## Standard Marketplace parcels with a pickup\n      In this scenario, an e-commerce platform sends Standard Marketplace parcels that require a pickup.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `Marketplace` | Marketplaces require special *marketplace* data, so the order type must be `Marketplace`. |\n        | service_level | `Standard` | Used for SLA calculations. |\n        | parcel_job | JSON | Required because the order type is `Marketplace`. |\n        | marketplace | JSON | Required because the order type is `Marketplace`. |\n        | parcel_job.pickup_address_id | STRING | Optional, but when provided, Ninja Van syncs your address book for easier pickup management. |\n\n      ```\n      \n      {\n        \"service_type\": \"Marketplace\",\n        \"service_level\": \"Standard\",\n        \"requested_tracking_number\": \"NV-123456\",\n        \"reference\":{\n            \"merchant_order_number\": \"ship-123\"\n        },\n        \"from\":{\n            \"name\": \"John Doe\",\n            \"phone_number\": \"+6563337193\",\n            \"email\": \"john.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"30 Jln Kilang Barat\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"to\":{\n            \"name\": \"Jane Doe\",\n            \"phone_number\": \"+6502700553\",\n            \"email\": \"jane.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"28 Jln Kilang Barat\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"parcel_job\":{\n            \"is_pickup_required\":true,\n            \"pickup_service_type\": \"Scheduled\",\n            \"pickup_service_level\": \"Standard\",\n            \"pickup_address_id\": \"123456\",\n            \"pickup_date\": \"2021-12-15\",\n            \"pickup_timeslot\":{\n              \"start_time\": \"09:00\",\n              \"end_time\": \"18:00\",\n              \"timezone\": \"Asia/Singapore\"\n            },\n            \"delivery_start_date\": \"2021-12-16\",\n            \"delivery_timeslot\":{\n              \"start_time\": \"09:00\",\n              \"end_time\": \"22:00\",\n              \"timezone\": \"Asia/Singapore\"\n            },\n            \"delivery_instructions\": \"Please be careful with as the packages are heavy\",\n            \"dimensions\":{\n              \"weight\":1.0,\n              \"size\": \"L\"\n            }\n        },\n        \"marketplace\":{\n            \"seller_id\": \"4567\",\n            \"seller_company_name\": \"Ninja Van Logistics\"\n        }\n      }\n      \n      ```\n\n      \n      ## Standard Marketplace parcels with a Premium pickup\n      In this scenario, an e-commerce platform sends Standard Marketplace parcels that require a Premium level pickup. \n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `Marketplace` | Marketplaces require special *marketplace* data, so the order type must be `Marketplace`. |\n        | service_level | `Standard` | Used for SLA calculations. |\n        | parcel_job | JSON | Required because the order type is `Marketplace`. |\n        | marketplace | JSON | Required because the order type is `Marketplace`. |\n        | parcel_job.pickup_service_type | `Scheduled` | For indicating that you require a scheduled pickup. |\n        | parcel_job.pickup_service_level | `Premium` | For indicating that your scheduled pickup is a Premium level pickup. |\n        | parcel_job.pickup_address_id | STRING | Optional, but when provided, Ninja Van syncs your address book for easier pickup management. |\n\n      ```\n      \n      {\n          \"service_type\": \"Marketplace\",\n          \"service_level\": \"Standard\",\n          \"requested_tracking_number\": \"NV-123456\",\n          \"reference\": {\n              \"merchant_order_number\": \"ship-123\"\n          },\n          \"from\": {\n              \"name\": \"John Doe\",\n              \"phone_number\": \"+6563337193\",\n              \"email\": \"john.doe@gmail.com\",\n              \"address\": {\n                  \"address1\": \"30 Jln Kilang Barat\",\n                  \"country\": \"SG\",\n                  \"postcode\": \"159363\"\n              }\n          },\n          \"to\": {\n              \"name\": \"Jane Doe\",\n              \"phone_number\": \"+6502700553\",\n              \"email\": \"jane.doe@gmail.com\",\n              \"address\": {\n                  \"address1\": \"28 Jln Kilang Barat\",\n                  \"country\": \"SG\",\n                  \"postcode\": \"159363\"\n              }\n          },\n          \"parcel_job\": {\n              \"is_pickup_required\": true,\n              \"pickup_service_type\": \"Scheduled\",\n              \"pickup_service_level\": \"Premium\",\n              \"pickup_address_id\": \"123456\",       \n              \"pickup_start_date\": \"2021-12-15\",\n              \"pickup_timeslot\": {\n                  \"start_time\": \"09:00\",\n                  \"end_time\": \"12:30\",\n                  \"timezone\": \"Asia/Singapore\"\n              },\n              \"pickup_instructions\": \"Parcels will be ready by 9 AM, and I'm leaving at 10:31 AM.\",\n              \"delivery_start_date\": \"2021-12-16\",\n              \"delivery_timeslot\": {\n                  \"start_time\": \"09:00\",\n                  \"end_time\": \"22:00\",\n                  \"timezone\": \"Asia/Singapore\"\n              },\n              \"delivery_instructions\": \"Please be careful with as the packages are heavy\",\n              \"dimensions\": {\n                  \"weight\": 1.0,\n                  \"size\": \"L\"\n              }\n          },\n          \"marketplace\": {\n              \"seller_id\": \"4567\",\n              \"seller_company_name\": \"Ninja Van Logistics\"\n          }\n      }\n      \n      ```\n\n\n      ## Standard Marketplace parcels self-collected at a Ninja Point\n      In this scenario, an e-commerce platform sends Standard Marketplace parcels that will be self-collected by recipients at a Ninja Point.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `Marketplace` | Marketplaces require special *marketplace* data, so the order type must be `Marketplace`. |\n        | service_level | `Standard` | Used for SLA calculations. Adjust the required service level accordingly. |\n        | parcel_job | JSON | Required because the order type is `Marketplace`. |\n        | parcel_job.allow_self_collection | BOOLEAN | If you allow self-collection, then set this to `true`. |\n        | to.collection_point | STRING | Required if you allow self-collection. This must contain the short name of the Ninja Point. |\n\n      ```\n      \n      {\n          \"service_type\": \"Marketplace\",\n          \"service_level\": \"Standard\",\n          \"requested_tracking_number\": \"1234-56789\",\n          \"reference\": {\n              \"merchant_order_number\": \"ship-123\"\n          },\n          \"from\": {\n              \"name\": \"John Doe\",\n              \"phone_number\": \"+6563337193\",\n              \"email\": \"john.doe@gmail.com\",\n              \"address\": {\n                  \"address1\": \"30 Jln Kilang Barat\",\n                  \"address2\": \"\",\n                  \"country\": \"SG\",\n                  \"postcode\": \"159363\"\n              }\n          },\n          \"to\": {\n              \"name\": \"Jane Doe\",\n              \"phone_number\": \"+6502700553\",\n              \"email\": \"jane.doe@gmail.com\",\n              \"address\": {\n                  \"address1\": \"181 Orchard Rd\",\n                  \"address2\": \"\",\n                  \"country\": \"SG\",\n                  \"postcode\": \"238896\"\n              },\n              \"collection_point\": \"Ninja PUDO @ Orchard Road\"\n          },\n          \"parcel_job\": {\n              \"is_pickup_required\": false,\n              \"allow_self_collection\": true,\n              \"delivery_start_date\": \"2021-12-16\",\n              \"delivery_timeslot\": {\n                  \"start_time\": \"09:00\",\n                  \"end_time\": \"22:00\",\n                  \"timezone\": \"Asia/Singapore\"\n              },\n              \"delivery_instructions\": \"Please be careful with the v-day flowers.\",\n              \"dimensions\": {\n                  \"weight\": 0.5,\n                  \"size\": \"S\"\n              }\n          },\n          \"marketplace\": {\n              \"seller_id\": \"4567\",\n              \"seller_company_name\": \"Ninja Van Logistics\"\n          }        \n      }\n      \n      ```    \n\n      ## Standard Marketplace parcels where a shipper drops-off a parcel at a Ninja Point\n      In this scenario, an e-commerce platform sends Standard Marketplace parcels, where the parcels are dropped off at a Ninja Point.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `Marketplace` | Marketplaces require special *marketplace* data, so the order type must be `Marketplace`. |\n        | service_level | `Standard` | Used for SLA calculations. |\n        | parcel_job | JSON | Required because the order type is `Marketplace`. |\n        | parcel_job.is_pickup_required | BOOLEAN | Either set this to `false`, or undefined. |\n        \n      ```\n      \n      {\n        \"service_type\": \"Marketplace\",\n        \"service_level\": \"Standard\",\n        \"requested_tracking_number\": \"1234-56789\",\n        \"reference\":{\n            \"merchant_order_number\": \"ship-123\"\n        },\n        \"from\":{\n            \"name\": \"John Doe\",\n            \"phone_number\": \"+6563337193\",\n            \"email\": \"john.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"30 Jln Kilang Barat\",\n              \"address2\": \"\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"to\":{\n            \"name\": \"Jane Doe\",\n            \"phone_number\": \"+6502700553\",\n            \"email\": \"jane.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"30 Jln Kilang Barat\",\n              \"address2\": \"\",\n              \"country\": \"SG\",\n              \"postcode\": \"159363\"\n            }\n        },\n        \"parcel_job\":{\n            \"is_pickup_required\":false,\n            \"delivery_start_date\": \"2021-12-16\",\n            \"delivery_timeslot\":{\n              \"start_time\": \"09:00\",\n              \"end_time\": \"22:00\",\n              \"timezone\": \"Asia/Singapore\"\n            },\n            \"delivery_instructions\": \"Please be careful with as the packages are heavy\",\n            \"dimensions\":{\n              \"weight\":1.0,\n              \"size\": \"L\"\n            }\n        }\n      }\n      \n      ```    \n\n      \n      ## International parcels imported by a forwarder\n      In this scenario, an e-commerce platform sends International parcels that were imported by a forwarder.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `International` | For sending parcels that were imported. |\n        | service_level | `Standard` | Used for SLA calculations. |\n        | parcel_job | JSON | Required because the order type is `International`. |\n        | international | JSON | Required because the order type is `International`. |\n        | international.portation | `Import` | For indicating that the parcel was imported by a forwarder. This determines how the parcel is returned to the shipper if the recipient rejects it. |\n\n      ```\n          \n      {\n          \"service_type\": \"International\",\n          \"service_level\": \"Standard\",\n          \"requested_tracking_number\": \"1234-56789\",\n          \"reference\": {\n              \"merchant_order_number\": \"ship-123\"\n          },\n          \"from\": {\n              \"name\": \"Jane Doe\",\n              \"phone_number\": \"+60103067174\",\n              \"email\": \"jane.doe@gmail.com\",\n              \"address\":{\n                \"address1\": \"Jalan PJU 8/8\",\n                \"address2\": \"\",\n                \"area\": \"Damansara Perdana\",\n                \"city\": \"Petaling Jaya\",\n                \"state\": \"Selangor\",\n                \"country\": \"MY\",\n                \"postcode\": \"47820\"\n              }\n          },\n          \"to\": {\n              \"name\": \"John Doe\",\n              \"phone_number\": \"+6563337193\",\n              \"email\": \"john.doe@gmail.com\",\n              \"address\": {\n                  \"address1\": \"30 Jln Kilang Barat\",\n                  \"address2\": \"\",\n                  \"country\": \"SG\",\n                  \"postcode\": \"159363\"\n              }\n          },\n          \"parcel_job\": {\n              \"is_pickup_required\": false,\n              \"delivery_start_date\": \"2021-12-16\",\n              \"delivery_timeslot\": {\n                  \"start_time\": \"09:00\",\n                  \"end_time\": \"22:00\",\n                  \"timezone\": \"Asia/Singapore\"\n              },\n              \"delivery_instructions\": \"Please be careful with the v-day flowers.\",\n              \"dimensions\": {\n                  \"weight\": 1.0,\n                  \"size\": \"L\"\n              }\n          },\n          \"international\": {\n              \"portation\": \"Import\"\n          },\n          \"experimental_customs_declaration\":{\n              \"customs_description\": \"men’s shirts\",\n              \"native_customs_description\": \"男人衬衫\",\n              \"goods_currency\": \"USD\",\n              \"goods_value\": \"15.99\",\n              \"battery_type\": \"No Battery\",\n              \"battery_packing\": \"No Battery\",\n              \"hs_code\": \"543111\",\n              \"trade_terms\": \"DDU\",\n              \"invoice_url\": \"www.invoice.com/12345.pdf\"\n          }        \n      }\n            \n      ```\n\n      ## International parcels exported by Ninja Van and imported into another country\n      In this scenario, an e-commerce platform sends International parcels that are to be exported out by Ninja Van and imported into another country for last-mile delivery.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `International` | For sending parcels that are to be exported. |\n        | service_level | `Standard` | Used for SLA calculations. Adjust the required service level accordingly. |\n        | parcel_job | JSON | Required because the order type is `International`. |\n        | international | JSON | Required because the order type is `International`. |\n        | international.portation | `Export` | For indicating that the parcel needs to be exported to another country for last-mile delivery. This determines how the parcel is returned to the shipper if the recipient rejects it. |\n\n      ```\n      \n      {\n          \"service_type\": \"International\",\n          \"service_level\": \"Standard\",\n          \"requested_tracking_number\": \"1234-56789\",\n          \"reference\": {\n              \"merchant_order_number\": \"ship-123\"\n          },\n          \"from\": {\n              \"name\": \"John Doe\",\n              \"phone_number\": \"+6563337193\",\n              \"email\": \"john.doe@gmail.com\",\n              \"address\": {\n                  \"address1\": \"30 Jln Kilang Barat\",\n                  \"address2\": \"\",\n                  \"country\": \"SG\",\n                  \"postcode\": \"159363\"\n              }\n          },\n          \"to\":{\n            \"name\": \"Jane Doe\",\n            \"phone_number\": \"+60103067174\",\n            \"email\": \"jane.doe@gmail.com\",\n            \"address\":{\n              \"address1\": \"Jalan PJU 8/8\",\n              \"address2\": \"\",\n              \"area\": \"Damansara Perdana\",\n              \"city\": \"Petaling Jaya\",\n              \"state\": \"Selangor\",\n              \"country\": \"MY\",\n              \"postcode\": \"47820\"\n            }\n          },\n          \"parcel_job\": {\n              \"is_pickup_required\": false,\n              \"delivery_start_date\": \"2021-12-16\",\n              \"delivery_timeslot\": {\n                  \"start_time\": \"09:00\",\n                  \"end_time\": \"22:00\",\n                  \"timezone\": \"Asia/Singapore\"\n              },\n              \"delivery_instructions\": \"Please be careful with the v-day flowers.\",\n              \"dimensions\": {\n                  \"weight\": 1.0,\n                  \"size\": \"L\"\n              }\n          },\n          \"international\": {\n              \"portation\": \"Export\"\n          },\n          \"experimental_customs_declaration\":{\n              \"customs_description\": \"men’s shirts\",\n              \"native_customs_description\": \"男人衬衫\",\n              \"goods_currency\": \"USD\",\n              \"goods_value\": \"15.99\",\n              \"battery_type\": \"No Battery\",\n              \"battery_packing\": \"No Battery\",\n              \"hs_code\": \"543111\",\n              \"trade_terms\": \"DDU\",\n              \"invoice_url\": \"www.invoice.com/12345.pdf\"\n          }\n      }\n      \n      ```\n\n      \n      ## Standard parcels self-collected at a Ninja Point\n      In this scenario, an e-commerce platform sends Standard parcels that will be self-collected by recipients at a Ninja Point.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `Parcel` | For sending orders, the corresponding order type is `Parcel`. |\n        | service_level | `Standard` | Used for SLA calculations. Adjust the required service level accordingly. |\n        | parcel_job | JSON | Required because the order type is `Parcel`. |\n        | parcel_job.allow_self_collection | BOOLEAN | If you allow self-collection, then set this to `true`. |\n        | to.collection_point | STRING | Required if you allow self-collection. This must contain the short name of the Ninja Point. |\n\n      ```\n      \n      {\n          \"service_type\": \"Parcel\",\n          \"service_level\": \"Standard\",\n          \"requested_tracking_number\": \"1234-56789\",\n          \"reference\": {\n              \"merchant_order_number\": \"ship-123\"\n          },\n          \"from\": {\n              \"name\": \"John Doe\",\n              \"phone_number\": \"+6563337193\",\n              \"email\": \"john.doe@gmail.com\",\n              \"address\": {\n                  \"address1\": \"30 Jln Kilang Barat\",\n                  \"address2\": \"\",\n                  \"country\": \"SG\",\n                  \"postcode\": \"159363\"\n              }\n          },\n          \"to\": {\n              \"name\": \"Jane Doe\",\n              \"phone_number\": \"+6502700553\",\n              \"email\": \"jane.doe@gmail.com\",\n              \"address\": {\n                  \"address1\": \"181 Orchard Rd\",\n                  \"address2\": \"\",\n                  \"country\": \"SG\",\n                  \"postcode\": \"238896\"\n              },\n              \"collection_point\": \"Ninja PUDO @ Orchard Road\"\n          },\n          \"parcel_job\": {\n              \"is_pickup_required\": false,\n              \"allow_self_collection\": true,\n              \"delivery_start_date\": \"2021-12-16\",\n              \"delivery_timeslot\": {\n                  \"start_time\": \"09:00\",\n                  \"end_time\": \"22:00\",\n                  \"timezone\": \"Asia/Singapore\"\n              },\n              \"delivery_instructions\": \"Please be careful with the v-day flowers.\",\n              \"dimensions\": {\n                  \"weight\": 0.5,\n                  \"size\": \"S\"\n              }\n          }\n      }\n      \n      ```\n\n      \n      ## Corporate HQ sending Standard parcels\n      In this scenario, a corporate HQ sends Standard parcels.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `Parcel` | For sending parcels under the corporate HQ's account. |\n        | service_level | `Standard` | Used for SLA calculations. Adjust the required service level accordingly. |\n        | parcel_job | JSON | Required because the order type is `Parcel`. |\n        | parcel_job.cash_on_delivery | DECIMAL | For cash on delivery parcels, this is the cash amount that Ninja Van's drivers and riders will collect from the recipient upon delivery. |\n        | parcel_job.is_pickup_required | BOOLEAN | If you require a pickup, then set this to `true`. |\n        | parcel_job.pickup_address_id | STRING | Optional, but when provided, Ninja Van syncs your address book for easier pickup management. |      \n\n      ```\n      \n      {\n          \"service_type\": \"Parcel\",\n          \"service_level\": \"Standard\",\n          \"requested_tracking_number\": \"1234-56789\",\n          \"reference\": {\n              \"merchant_order_number\": \"ship-123\"\n          },\n          \"from\": {\n              \"name\": \"John Doe\",\n              \"phone_number\": \"+6563337193\",\n              \"email\": \"john.doe@gmail.com\",\n              \"address\": {\n                  \"address1\": \"30 Jln Kilang Barat\",\n                  \"address2\": \"\",\n                  \"country\": \"SG\",\n                  \"postcode\": \"159363\"\n              }\n          },\n          \"to\": {\n              \"name\": \"Jane Doe\",\n              \"phone_number\": \"+6502700553\",\n              \"email\": \"jane.doe@gmail.com\",\n              \"address\": {\n                  \"address1\": \"69 Lorong 6 Geylang\",\n                  \"address2\": \"\",\n                  \"country\": \"SG\",\n                  \"postcode\": \"399221\"\n              }\n          },\n          \"parcel_job\": {\n              \"is_pickup_required\": false,\n              \"cash_on_delivery\": 200.00,\n              \"allow_self_collection\": true,\n              \"delivery_start_date\": \"2021-12-16\",\n              \"delivery_timeslot\": {\n                  \"start_time\": \"09:00\",\n                  \"end_time\": \"22:00\",\n                  \"timezone\": \"Asia/Singapore\"\n              },\n              \"delivery_instructions\": \"Please be careful with the v-day flowers.\",\n              \"dimensions\": {\n                  \"weight\": 0.5,\n                  \"size\": \"S\"\n              }\n          }\n      }\n      \n      ```\n\n      ## Corporate HQ sending Standard parcels for branches with a Premium pickup\n      In this scenario, a corporate HQ sends Standard parcels for their branches with a Premium pickup required.\n\n        | Parameter | Value | Description |\n        |-------------|----------|----------|\n        | service_type  | `Corporate` | For sending parcels under the corporate HQ's account. |\n        | service_level | `Standard` | Used for SLA calculations. |\n        | corporate | JSON | Required because the order type is `Corporate`. |  \n        | corporate.branch_id | STRING | Specify the corporate branch ID that this order belongs to. |  \n        | parcel_job | JSON | Required because the order type is `Corporate`. |\n        | parcel_job.is_pickup_required | BOOLEAN | If you require a pickup, then set this to `true`. |\n        | parcel_job.pickup_service_type | Scheduled | For indicating that you require a scheduled pickup. |\n        | parcel_job.pickup_service_level | Premium | For indicating that your scheduled pickup is a Premium level pickup. |\n        | parcel_job.pickup_address_id | STRING | Optional, but when provided, Ninja Van syncs your address book for easier pickup management. |            \n        \n\n      ```\n      \n      {\n          \"service_type\": \"Corporate\",\n          \"service_level\": \"Standard\",\n          \"requested_tracking_number\": \"NV-123456\",\n          \"reference\": {\n              \"merchant_order_number\": \"ship-123\"\n          },\n          \"from\": {\n              \"name\": \"John Doe\",\n              \"phone_number\": \"+6563337193\",\n              \"email\": \"john.doe@gmail.com\",\n              \"address\": {\n                  \"address1\": \"30 Jln Kilang Barat\",\n                  \"country\": \"SG\",\n                  \"postcode\": \"159363\"\n              }\n          },\n          \"to\": {\n              \"name\": \"Jane Doe\",\n              \"phone_number\": \"+6502700553\",\n              \"email\": \"jane.doe@gmail.com\",\n              \"address\": {\n                  \"address1\": \"28 Jln Kilang Barat\",\n                  \"country\": \"SG\",\n                  \"postcode\": \"159363\"\n              }\n          },\n          \"corporate\":\n          {\n              \"branch_id\": \"1234\"\n          },\n          \"parcel_job\": {\n              \"is_pickup_required\": true,\n              \"pickup_service_type\": \"Scheduled\",\n              \"pickup_service_level\": \"Premium\",\n              \"pickup_address_id\": \"123456\",       \n              \"pickup_start_date\": \"2021-12-15\",\n              \"pickup_timeslot\": {\n                  \"start_time\": \"09:00\",\n                  \"end_time\": \"10:30\",\n                  \"timezone\": \"Asia/Singapore\"\n              },\n              \"pickup_instructions\": \"Parcels will be ready by 9 AM, and I'm leaving at 10:31 AM.\",\n              \"delivery_start_date\": \"2021-12-16\",\n              \"delivery_timeslot\": {\n                  \"start_time\": \"09:00\",\n                  \"end_time\": \"22:00\",\n                  \"timezone\": \"Asia/Singapore\"\n              },\n              \"delivery_instructions\": \"Please be careful with as the packages are heavy\",\n              \"dimensions\": {\n                  \"weight\": 1.0,\n                  \"size\": \"L\"\n              }\n          }\n        }\n      \n      ```\n\n      # Zone code mapping\n      This section describes the zone codes for the [Tariff API](#tag/Tariff-API). \n      Zone codes are used as identifiers to distinguish locations at granular levels, which vary by country.\n\n      ## Indonesia \n      In Indonesia, zone codes are used to distinguish locations up to the Kecamatan (district) level.\n      Each district is represented by 2 codes: `L1 tier code` for its Provinsi (province), and `L2 tier code` for its Kota/Kabupaten (city/regency) and Kecamatan.\n\n      The mapping data is available as a CSV file: <a href=\"/static/media/ID_zone_code_mapping.ae6d8012.csv\">ID_zone_code_mapping.csv</a>.\n\npaths:\n  '/{countryCode}/2.0/oauth/access_token':\n    post:\n      tags:\n        - OAuth API\n      summary: Request access token\n      description: |-\n        Returns a new OAuth Bearer access token. \n        \n        ### Prerequisites\n\n        To make requests to this endpoint, you need to have the Client ID and Client Secret credentials. For more information, see [Authentication](#section/Introduction/Authentication). \n\n        ### Implementation flow\n        \n        Your implementation must adhere to this flow:\n        1. Generate an access token.\n        2. Store the token, along with the expiration timestamp, in a persistent storage.\n        3. Attach the token as a Bearer token with every API request to a Ninja Van API. This means that for the `Authorization` HTTP header, the value must be `Bearer <INSERT ACCESS TOKEN>`.\n        4. Five minutes before the token expires, or if a request to a Ninja Van API returns an HTTP `401` status code, generate a new token.\n\n        Validity period is dynamic and may change from time to time. The minimum validity period is *one hour*.\n        \n        **Note:** Always set `grant_type` to `client_credentials`.\n\n      parameters:\n        - name: countryCode\n          in: path\n          description: Country Code\n          required: true\n          schema:\n            type: string\n            enum:\n              - SG\n              - MY\n              - TH\n              - ID\n              - VN\n              - PH\n              - MM\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccessTokenGrantRequest'\n        required: false\n      responses:\n        '200':\n          description: Access token was successfully generated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessTokenGrantResponse'\n        '400':\n          description: Access token wasn't generated because of an issue with the request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Access token wasn't generated because of an issue with the server.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-code-samples:\n        - lang: curl\n          source: |-\n            curl --location --request POST \n              'https://api-sandbox.ninjavan.co/sg/2.0/oauth/access_token' \\\n                --header 'Content-Type: application/json' \\\n                --data-raw '{\n                  \"client_id\": \"string\",\n                  \"client_secret\": \"string\",\n                  \"grant_type\": \"client_credentials\"\n                }'\n      x-codegen-request-body-name: body\n    x-summary: Generate OAuth Bearer access token\n  '/{countryCode}/4.1/orders':\n    post:\n      tags:\n        - Order API\n      summary: Create order\n      description: |-\n        Creates a new delivery order.  \n\n        To avoid creating duplicate orders, we recommend sending a `requested_tracking_number` so that the API can use it to generate the waybill tracking number.\n\n        For marketplace platforms, `marketplace` information is required. Using the provided `seller_id`, the API automatically creates a new Ninja Van shipper account for your marketplace seller, if the `seller_id` wasn't previously registered in Ninja Van's systems.\n\n        For corporate accounts, `corporate` information is required. The corporate branch account has to be created under the corporate HQ before an order creation request can be made. Using `branch_id` field, the API creates orders for the corporate branch identified by the given branch ID.\n      parameters:\n        - name: Authorization\n          in: header\n          description: Your Bearer token.\n          required: true\n          schema:\n            type: string\n        - name: countryCode\n          in: path\n          description: Country code.\n          required: true\n          schema:\n            type: string\n            enum:\n              - SG\n              - MY\n              - TH\n              - ID\n              - VN\n              - PH\n              - MM\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewOrderV4.1'\n        required: false\n      responses:\n        '200':\n          description: Order successfully created.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - required:\n                      - tracking_number\n                    type: object\n                    properties:\n                      requested_tracking_number:\n                        minLength: 9\n                        pattern: '^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$'\n                        type: string\n                        description: |-\n                          The requested tracking number of the order.\n                      tracking_number:\n                        pattern: '^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$'\n                        type: string\n                      service_type:\n                        $ref: '#/components/schemas/ServiceType'\n                      service_level:\n                        $ref: '#/components/schemas/ServiceLevel'\n                      reference:\n                        type: object\n                        properties:\n                          merchant_order_number:\n                            maxLength: 255\n                            type: string\n                            description: Identifier of the order in shipper's systems.\n                        description: 'Reference information.'\n                      from:\n                        type: object\n                        description: |-\n                          Sender's information.\n                        allOf:\n                          - $ref: '#/components/schemas/NewSender'\n                      to:\n                        type: object\n                        description: |-\n                          Recipient's information.\n                        allOf:\n                          - $ref: '#/components/schemas/NewRecipient'\n                      parcel_job:\n                        type: object\n                        description: |-\n                          Details of the parcel's pickup and delivery jobs.\n                        allOf:\n                          - $ref: '#/components/schemas/ParcelJob'\n                    example:\n                      requested_tracking_number: 1234-56789\n                      tracking_number: PREFIX1234-56789\n                      service_type: Parcel\n                      service_level: Standard\n                      reference:\n                        merchant_order_number: SHIP-1234-56789\n                      from:\n                        name: John Doe\n                        phone_number: '+60138201527'\n                        email: john.doe@gmail.com\n                        address:\n                          address1: 17 Lorong Jambu 3\n                          address2: ''\n                          area: Taman Sri Delima\n                          city: Simpang Ampat\n                          state: Pulau Pinang\n                          address_type: office\n                          country: MY\n                          postcode: '51200'\n                      to:\n                        name: Jane Doe\n                        phone_number: '+60103067174'\n                        email: jane.doe@gmail.com\n                        address:\n                          address1: Jalan PJU 8/8\n                          address2: ''\n                          area: Damansara Perdana\n                          city: Petaling Jaya\n                          state: Selangor\n                          address_type: home\n                          country: MY\n                          postcode: '47820'\n                      parcel_job:\n                        is_pickup_required: true\n                        pickup_service_type: Scheduled\n                        pickup_service_level: Standard\n                        pickup_address_id: '98989012'\n                        pickup_date: '2021-12-15'\n                        pickup_timeslot:\n                          start_time: '09:00'\n                          end_time: '12:00'\n                          timezone: Asia/Kuala_Lumpur\n                        pickup_approximate_volume: Less than 3 Parcels\n                        pickup_instructions: Pickup with care!\n                        delivery_start_date: '2021-12-16'\n                        delivery_timeslot:\n                          start_time: '09:00'\n                          end_time: '12:00'\n                          timezone: Asia/Kuala_Lumpur\n                        delivery_instructions: 'If recipient is not around, leave parcel in power riser.'\n                        allow-weekend_delivery: true\n                        dimensions:\n                          weight: 1.5\n                        items:\n                          - item_description: Sample description\n                            quantity: 1\n                            is_dangerous_good: false\n        '400':\n          description: Order wasn't created because of an issue with the request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                service-level-not-supported:\n                  summary: Service level not supported\n                  value:\n                    error:\n                      request_id: 1ba6da4f-0709-416e-9e30-a5546130b4d2\n                      title: Invalid Data\n                      message: Please check your request payload for validation errors.\n                      details:\n                        - reason: Validation Error\n                          message: Service Level is not supported for this shipper account\n                utf-extended-not-supported:\n                  summary: UTF extended charset not supported\n                  value:\n                    error:\n                      code: 127014\n                      title: Bad Request\n                      message: Invalid charset! UTF Extended charset is not supported\n                duplicate-tracking-id:\n                  summary: Duplicate tracking ID\n                  value:\n                    error:\n                      code: 109201\n                      request_id: 1ba6da4f-0709-416e-9e30-a5546130b4d2\n                      title: Duplicate Tracking ID\n                      message: Tracking ID (123456789) has been used, please use a different tracking ID and try again\n                invalid-timeslot:\n                  summary: Invalid pickup or delivery time slot\n                  value:\n                    error:\n                      request_id: 1ba6da4f-0709-416e-9e30-a5546130b4d2\n                      title: Invalid Data\n                      message: Please check your request payload for validation errors.\n                      details:\n                        - reason: Validation Error\n                          message: Invalid timeslot provided. Please check the API docs for a list of valid time slots.\n                invalid-contact-info:\n                  summary: Contact information not provided\n                  value:\n                    error:\n                      request_id: 1ba6da4f-0709-416e-9e30-a5546130b4d2\n                      title: Invalid Data\n                      message: Please check your request payload for validation errors.\n                      details:\n                        - reason: Validation Error\n                          field: null\n                          message: \"'Invalid contact information. Please provide either a 'email' or 'phone_number'.\"\n                dimension-info-not-provided:\n                  summary: Dimension information not provided\n                  value:\n                    error:\n                      request_id: 1ba6da4f-0709-416e-9e30-a5546130b4d2\n                      title: Invalid Data\n                      message: Please check your request payload for validation errors.\n                      details:\n                        - reason: Validation Error\n                          message: At least a form of dimension must be provided. Please check with your shipper support team to see which one you should be providing.\n                          field: parcel_job.dimensions\n                cod-not-configured:\n                  summary: Cash on delivery not configured\n                  value:\n                    error:\n                      request_id: 1ba6da4f-0709-416e-9e30-a5546130b4d2\n                      title: Invalid Data\n                      message: Please check your request payload for validation errors.\n                      details:\n                        - reason: Validation Error\n                          field: null\n                          message: \"Your account isn't configured for Cash on Delivery. Please check with your shipper support team on enabling this service.\"\n                invalid-requested-tracking-number:\n                  summary: Invalid requested tracking number\n                  value:\n                    error:\n                      request_id: 1ba6da4f-0709-416e-9e30-a5546130b4d2\n                      title: Invalid Data\n                      message: Please check your request payload for validation errors.\n                      details:\n                        - reason: Validation Error\n                          field: null\n                          message: \"The 'requested_tracking_number' field must be between 1 and 9 characters (please do not pass a prefix), and can contain alphanumeric characters, and the (-) dash symbol.\"\n                invalid-requested-tracking-prefix:\n                  summary: Invalid requested tracking prefix\n                  value:\n                    error:\n                      request_id: 1ba6da4f-0709-416e-9e30-a5546130b4d2\n                      title: Invalid Data\n                      message: Please check your request payload for validation errors.\n                      details:\n                        - reason: Validation Error\n                          field: null\n                          message: \"The 'requested_tracking_number' field must start with the correct prefix.\"\n        '500':\n          description: Order wasn't created because of an issue with the server.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-code-samples:\n        - lang: curl\n          source: |-\n            curl --location --request POST 'https://api-sandbox.ninjavan.co/sg/4.1/orders' \\\n            --header 'Authorization: Bearer string' \\\n            --header 'Content-Type: application/json' \\\n            --data-raw '{\n              \"service_type\": \"Parcel\",\n              \"service_level\": \"Standard\",\n              \"requested_tracking_number\": \"1234-56789\",\n              \"reference\": {\n                \"merchant_order_number\": \"SHIP-1234-56789\"\n                },\n              \"from\": {\n                \"name\": \"John Doe\",\n                \"phone_number\": \"+60138201527\",\n                \"email\": \"john.doe@gmail.com\",\n                \"address\": {\n                  \"address1\": \"17 Lorong Jambu 3\",\n                  \"address2\": \"\",\n                  \"area\": \"Taman Sri Delima\",\n                  \"city\": \"Simpang Ampat\",\n                  \"state\": \"Pulau Pinang\",\n                  \"address_type\": \"office\",\n                  \"country\": \"MY\",\n                  \"postcode\": \"51200\"\n                  }\n                },\n                \"to\": {\n                \"name\": \"Jane Doe\",\n                \"phone_number\": \"+60103067174\",\n                \"email\": \"jane.doe@gmail.com\",\n                \"address\": {\n                  \"address1\": \"Jalan PJU 8/8\",\n                  \"address2\": \"\",\n                  \"area\": \"Damansara Perdana\",\n                  \"city\": \"Petaling Jaya\",\n                  \"state\": \"Selangor\",\n                  \"address_type\": \"home\",\n                  \"country\": \"MY\",\n                  \"postcode\": \"47820\"\n                  }\n                },\n            \"parcel_job\": {\n              \"is_pickup_required\": true,\n              \"pickup_service_type\": \"Scheduled\",\n              \"pickup_service_level\": \"Standard\",\n              \"pickup_address_id\": \"98989012\",\n              \"pickup_date\": \"2021-12-15\",\n              \"pickup_timeslot\": {\n                \"start_time\": \"09:00\",\n                \"end_time\": \"12:00\",\n                \"timezone\": \"Asia/Kuala_Lumpur\"\n                },\n              \"pickup_instructions\": \"Pickup with care!\",\n              \"delivery_instructions\": \"If recipient is not around, leave parcel in power riser.\",\n              \"delivery_start_date\": \"2021-12-16\",\n              \"delivery_timeslot\": {\n                \"start_time\": \"09:00\",\n                \"end_time\": \"22:00\",\n                \"timezone\": \"Asia/Kuala_Lumpur\"\n                },\n              \"dimensions\": {\n                  \"weight\": 1.5\n                },\n              \"items\": [\n                {\n                  \"item_description\": \"Sample description\",\n                  \"quantity\": 1,\n                  \"is_dangerous_good\": false\n                }\n              ]\n              }\n            }'\n      x-codegen-request-body-name: body\n    x-summary: Create Order (v4.1 - Latest)\n  '/{countryCode}/2.0/reports/waybill':\n    get:\n      tags:\n        - Order API\n      summary: Generate waybill\n      description: |-\n        Generates a waybill for an order.\n\n        You can generate a waybill only for an order that is successfully processed. After an order creation request is accepted by the order creation endpoint, the order goes into a queue for further processing. \n        When it's fully processed, the platform generates a Pending Pickup webhook (see [Sample webhook payloads](#section/Receive-a-webhook/Sample-webhook-payloads)). This webhook gives your system an indication that a waybill can be generated.\n        \n        ### How to request access\n        By default, Ninja Van doesn't grant the permission to use the waybill generation endpoint to any shipper, even in the sandbox environment. To request access, take these steps:\n        \n        1. Review the [Integration requirements](#section/Introduction/Integration-requirements).\n        2. Send an email to [developer support](#section/Introduction/Contact-information).\n\n      parameters:\n        - name: Authorization\n          in: header\n          description: Your Bearer token.\n          required: true\n          schema:\n            type: string\n        - name: countryCode\n          in: path\n          description: Country code.\n          required: true\n          schema:\n            type: string\n            enum:\n              - SG\n              - MY\n              - TH\n              - ID\n              - VN\n              - PH\n              - MM\n        - name: tids\n          in: query\n          description: The `tracking_number` as generated by the Order API.\n          required: true\n          schema:\n            minLength: 9\n            pattern: '^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$'\n            type: string\n        - name: h\n          in: query\n          description: A flag for hiding shipper's details, such as contact information, on the waybill. If no flag is provided with the query, the details are hidden. To explicitly hide the details, set to `1`. To show the details, set to `0`.\n          schema:\n            maximum: 1\n            minimum: 0\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: Waybill successfully generated. A PDF file will be returned in the response.\n          content: {}\n        '400':\n          description: Waybill wasn't generated because of an invalid request.\n          content: {}\n      x-code-samples:\n        - lang: curl\n          source: |-\n            curl --location --request GET \\\n              'https://api-sandbox.ninjavan.co/sg/2.0/reports/waybill?tids=:trackingNo&h=1' \\\n                --header 'Authorization: Bearer string'\n      x-codegen-request-body-name: body\n    x-summary: Generate Waybill\n  '/{countryCode}/2.2/orders/{trackingNo}':\n    delete:\n      tags:\n        - Order API\n      summary: Cancel order\n      description: |-\n        Cancels an existing delivery order. Only orders that are Pending Pickup can be cancelled.\n\n        **Note:** The names of the parameters in this endpoint differ from the [order creation](#tag/Order-API/paths/~1{countryCode}~14.1~1orders/post) endpoint. \n        This is because the two endpoints use different specification versions.\n\n      parameters:\n        - name: Authorization\n          in: header\n          description: Your Bearer token.\n          required: true\n          schema:\n            type: string\n        - name: countryCode\n          in: path\n          description: Country code.\n          required: true\n          schema:\n            type: string\n            enum:\n              - SG\n              - MY\n              - TH\n              - ID\n              - VN\n              - PH\n              - MM\n        - name: trackingNo\n          in: path\n          description: The `tracking_number` that our API returned in the order creation response.\n          required: true\n          schema:\n            minLength: 9\n            pattern: '^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$'\n            type: string\n      responses:\n        '200':\n          description: Order successfully cancelled.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CancelOrderResponse'\n        '400':\n          description: Order wasn't cancelled because of an issue with the request.\n          content: {}\n        '404':\n          description: Order wasn't cancelled because no orders were found that matched the query parameters.\n          content: {}\n        '500':\n          description: Order wasn't cancelled because of an issue with the server.\n          content: {}\n      x-code-samples:\n        - lang: curl\n          source: |-\n            curl --location --request DELETE \\\n              'https://api-sandbox.ninjavan.co/sg/2.2/orders/:trackingNo' \\\n                --header 'Authorization: Bearer string'\n      x-codegen-request-body-name: body\n    x-summary: Cancel Order\n  '/{countryCode}/2.0/pudos':\n    x-summary: List Ninja Points v2\n    get:\n      tags:\n        - PUDO API\n      summary: List Ninja Points v2\n      description: >\n        Returns a list of Ninja Points that meet the passed query parameters.\n      parameters:\n        - name: countryCode\n          in: path\n          description: Country code.\n          required: true\n          schema:\n            type: string\n            enum:\n              - SG\n              - MY\n              - TH\n              - ID\n              - VN\n              - PH\n              - MM\n        - name: can_customer_collect\n          in: query\n          description: Set this to `true` to fetch the list of Ninja Points where the customer can collect parcels.\n          required: false\n          schema:\n            type: boolean\n        - name: allow_create_post\n          in: query\n          description: Set this to `true` to fetch the list of Ninja Points where the shipper can create \"post\" parcels.\n          required: false\n          schema:\n            type: boolean\n        - name: allow_customer_return\n          in: query\n          description: Set this to `true` to fetch the list of Ninja Points where the customer can return parcels.\n          required: false\n          schema:\n            type: boolean\n        - name: allow_shipper_send\n          in: query\n          description: Set this to `true` to fetch the list of Ninja Points where the shipper can drop off parcels.\n          required: false\n          schema:\n            type: boolean\n        - name: allow_create_pack\n          in: query\n          description: Set this to `true` to fetch the list of Ninja Points where the shipper can drop off \"pack\" parcels.\n          required: false\n          schema:\n            type: boolean\n        - name: can_sell_packs\n          in: query\n          description: Set this to `true` to fetch the list of Ninja Points where the shipper can buy \"pack\" parcels.\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Ninja points successfully listed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DistributionPointV2'\n      x-code-samples:\n        - lang: curl\n          source: |-\n            curl --location --request GET \\\n            'https://api-sandbox.ninjavan.co/sg/2.0/pudos?can_customer_collect=false&allow_create_post=false&allow_customer_return=false&allow_shipper_send=false&allow_create_pack=false&can_sell_packs=false'\n      x-codegen-request-body-name: body\n  '/{countryCode}/1.0/send-orders/{trackingId}':\n    x-summary: Scan parcel for shipper drop-off\n    get:\n      tags:\n        - PUDO partners API\n      summary: Scan parcel for shipper drop-off\n      description: |+\n        Triggers parcel scanning for shipper drop-off at a Ninja Point. Returns order information.\n      parameters:\n        - name: countryCode\n          in: path\n          description: Country code.\n          required: true\n          schema:\n            type: string\n            enum:\n              - SG\n              - MY\n              - TH\n              - ID\n              - VN\n              - PH\n              - MM\n        - name: trackingId\n          in: path\n          description: Tracking ID of the order.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Order successfully scanned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SendParcelScanResponse'\n      x-code-samples:\n        - lang: curl\n          source: |-\n            curl --location --request GET \\\n            'https://api-sandbox.ninjavan.co/sg/dp/1.0/external/orders/{trackingId}'\n      x-codegen-request-body-name: body\n  '/{countryCode}/1.0/send-orders/drop-off':\n    x-summary: Trigger shipper drop-off for parcel\n    post:\n      tags:\n        - PUDO partners API\n      summary: Trigger shipper drop-off for parcel\n      description: >\n        Notifies Ninja Van that a parcel is being dropped off at a Ninja Point by a shipper. Returns parcels that are successfully dropped off and a list of errors if any.\n      parameters:\n        - name: countryCode\n          in: path\n          description: Country code.\n          required: true\n          schema:\n            type: string\n            enum:\n              - SG\n              - MY\n              - TH\n              - ID\n              - VN\n              - PH\n              - MM\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendWebhookRequest'\n        required: true\n      responses:\n        '200':\n          description: Parcels successfully dropped off (possibly some of them had errors).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SendWebhookResponse'\n        '400':\n          description: Validation error (store doesn't exist or the list of tracking IDs is empty).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-code-samples:\n        - lang: curl\n          source: |-\n            curl --location --request POST \\\n            'https://api-sandbox.ninjavan.co/sg/dp/1.0/external/orders'\n      x-codegen-request-body-name: body\n  '/{countryCode}/1.0/dp-order-events':\n    x-summary: Trigger webhooks for customer collection, driver drop-off, driver collection\n    put:\n      tags:\n        - PUDO partners API\n      summary: Trigger webhooks for customer collection, driver drop-off, driver collection\n      description: |+\n        Sends Ninja Van a webhook whenever one of the following events occur: \n        * Customer collects a parcel from a Ninja Point.\n        * Driver drops off a parcel at a Ninja Point. \n        * Driver collects a parcel from a Ninja Point.\n      parameters:\n        - name: countryCode\n          in: path\n          description: Country code.\n          required: true\n          schema:\n            type: string\n            enum:\n              - SG\n              - MY\n              - TH\n              - ID\n              - VN\n              - PH\n              - MM\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DpOrderEventRequest'\n            examples:\n              store_received_from_driver:\n                summary: Webshook for when the store received the parcel from the driver.\n                value:\n                  tracking_id: NVSGBEDBP03784ADPL\n                  store_id: PSVKV4M16A\n                  received_at: 2022-06-01 00:00:00\n              store_released_to_customer:\n                summary: Webhook for when the store released the parcel to the customer.\n                value:\n                  tracking_id: NVSGBEDBP03784ADPL\n                  store_id: PSVKV4M16A\n                  released_at: 2022-06-01 00:00:00\n                  customer_unlock_code: 389123\n              store_released_to_driver:\n                summary: Webhook for when the store released the parcel to the driver.\n                value:\n                  tracking_id: NVSGBEDBP03784ADPL\n                  store_id: PSVKV4M16A\n                  released_at: 2022-06-01 00:00:00\n        required: true\n      responses:\n        '202':\n          description: Event successfully processed.\n        '400':\n          description: Validation error (the store doesn't exist or the list of tracking IDs is empty).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-code-samples:\n        - lang: curl\n          source: |-\n            curl --location --request PUT \\\n            'https://api-sandbox.ninjavan.co/sg/1.0/dp-order-events'\n      x-codegen-request-body-name: body\n  '/{countryCode}/1.0/public/price':\n    x-summary: Get standard price\n    post:\n      tags:\n        - Tariff API\n      summary: Get price estimate\n      description: |-\n        Returns an estimated standard delivery fee for an order based on the provided `weight`, `service_level`, `from` and `to` locations, excluding any surcharge and discount. \n\n        **Note:** This endpoint doesn't require authentication but is rate-limited to 20 calls per minute.\n      parameters:\n        - name: countryCode\n          in: path\n          description: Country code. Only `ID` is supported.\n          required: true\n          schema:\n            type: string\n            enum:\n              - ID\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PriceEstimate'\n        required: true\n      responses:\n        '200':\n          description: Obtained a price estimate successfully.\n          content:\n            application/json:\n              schema:\n                  type: object\n                  required:\n                    - data\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        total_fee:\n                          type: number\n                          description: The estimated price. May be expressed in exponential notation.\n                          example: 9E+4\n        '404':\n          description: Origin-Destination (OD) pair error. Cannot find a price estimate because the given from and to zone pair does not exist in the rate card. This may mean that the submitted zone codes are invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              example:\n                error:\n                  code: \"1002\"\n                  request_id: \"7a67b378-bf21-4de6-b982-3cb10ee5b1f6\"\n                  title: \"No OD Pair in Script\"\n                  message: \"Pricing Script and Billing Zones are present, but there's no existing OD pair\"\n  '/{countryCode}/1.0/orders/tracking-events/{trackingNumber}':\n    x-summary: Get events for single parcel\n    get:\n      tags:\n        -  Tracking API\n      summary: Get events for single parcel\n      description: >\n        Get a list of tracking events of a single parcel by tracking number.\n\n        ### How to request access\n          Access to this endpoint is conditional. By default, Ninja Van doesn't grant the permission to use this endpoint to any shipper, even in the sandbox environment. To request access, take these steps:\n        \n          1. Review the [Integration requirements](#section/Introduction/Integration-requirements).\n          2. Send an email to [developer support](#section/Introduction/Contact-information).\n      parameters:\n        - name: Authorization\n          in: header\n          description: Your Bearer token.\n          required: true\n          schema:\n            type: string\n        - name: countryCode\n          in: path\n          description: Country code.\n          required: true\n          schema:\n            type: string\n            enum:\n              - SG\n              - MY\n              - TH\n              - ID\n              - VN\n              - PH\n              - MM\n        - name: trackingNumber\n          in: path\n          description: The `tracking_number` as generated by the Order API.\n          required: true\n          schema:\n            minLength: 9\n            pattern: '^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$'\n            type: string\n      responses:\n        '200':\n          description: Events retrieved successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleTrackingNumberResponse'\n        '400':\n          description: Events weren't retrieved because of an issue with the request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-code-samples:\n        - lang: curl\n          source: |-\n            curl --location --request GET \\\n              'https://api-sandbox.ninjavan.co/sg/1.0/orders/tracking-events/:trackingNumber' \\\n                --header 'Authorization: Bearer string'\n      x-codegen-request-body-name: body\n  '/{countryCode}/1.0/orders/tracking-events':\n    x-summary: Get events for list of parcels\n    get:\n      tags:\n        -  Tracking API\n      summary: Get events for list of parcels\n      description: >\n        Retrieve tracking events for a list of tracking numbers.\n\n        ### How to request access\n          Access to this endpoint is conditional. By default, Ninja Van doesn't grant the permission to use this endpoint to any shipper, even in the sandbox environment. To request access, take these steps:\n          \n          1. Review the [Integration requirements](#section/Introduction/Integration-requirements).\n          2. Send an email to [developer support](#section/Introduction/Contact-information).\n      parameters:\n        - name: Authorization\n          in: header\n          description: Your Bearer token.\n          required: true\n          schema:\n            type: string\n        - name: countryCode\n          in: path\n          description: Country code.\n          required: true\n          schema:\n            type: string\n            enum:\n              - SG\n              - MY\n              - TH\n              - ID\n              - VN\n              - PH\n              - MM\n        - name: tracking_number\n          in: query\n          description: The list of tracking_number to track, limited to 50 per request.\n          required: true\n          schema:\n            minLength: 9\n            pattern: '^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$'\n            type: string\n      responses:\n        '200':\n          description: Events retrieved successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultipleTrackingNumbersResponse'\n        '400':\n          description: Events weren't retrieved because of an issue with the request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-code-samples:\n        - lang: curl\n          source: |-\n            curl --location --request GET \\\n              'https://api-sandbox.ninjavan.co/sg/1.0/orders/tracking-events?tracking_number=:trackingNumber1&tracking_number=:trackingNumber2' \\\n                --header 'Authorization: Bearer string'\n      x-codegen-request-body-name: body\n\n\ncomponents:\n  schemas:\n    LegacyOrder:\n      type: object\n      properties:\n        tracking_number:\n          type: string\n        requested_tracking_number:\n          type: string\n        order_ref_no:\n          type: string\n        type:\n          type: string\n        from_postcode:\n          type: string\n        from_address1:\n          type: string\n        from_address2:\n          type: string\n        from_locality:\n          type: string\n        from_city:\n          type: string\n        from_country:\n          type: string\n        from_email:\n          type: string\n        from_name:\n          type: string\n        from_contact:\n          type: string\n        to_postcode:\n          type: string\n        to_address1:\n          type: string\n        to_address2:\n          type: string\n        to_locality:\n          type: string\n        to_city:\n          type: string\n        to_country:\n          type: string\n        to_email:\n          type: string\n        to_name:\n          type: string\n        to_contact:\n          type: string\n        pickup_instructions:\n          type: string\n        delivery_instructions:\n          type: string\n        delivery_date:\n          type: string\n        parcel_size:\n          type: integer\n        parcel_volume:\n          type: integer\n          format: double\n        parcel_weight:\n          type: integer\n          format: double\n        max_delivery_days:\n          maximum: 10\n          minimum: 0\n          type: integer\n          format: int32\n        id:\n          type: string\n          description: Async handle of the order.\n    Parcel:\n      type: object\n      description: Parcel service representation\n      allOf:\n        - $ref: '#/components/schemas/NewOrderV4.1'\n    Marketplace:\n      type: object\n      description: marketplace order representation\n      properties:\n        marketplace:\n          $ref: '#/components/schemas/MarketplaceOrder'\n      allOf:\n        - $ref: '#/components/schemas/NewOrderV4.1'\n    Corporate:\n      type: object\n      description: corporate order representation\n      properties:\n        corporate:\n          $ref: '#/components/schemas/CorporateOrder'\n      allOf:\n        - $ref: '#/components/schemas/NewOrderV4.1'\n    International:\n      type: object\n      description: international order representation\n      properties:\n        international:\n          $ref: '#/components/schemas/InternationalOrder'\n        experimental_customs_declaration:\n          $ref: '#/components/schemas/CustomsDeclaration'\n      allOf:\n        - $ref: '#/components/schemas/NewOrderV4.1'\n      example:\n        international:\n          portation: import\n        experimental_customs_declaration:\n          customs_description: men's shirts\n          native_customs_description: 男人衬衫\n          goods_currency: USD\n          goods_value: '15.99'\n          battery_type: No Battery\n          battery_packing: No Battery\n          hs_code: '543111'\n          trade_terms: DDU\n          invoice_url: www.invoice.com/12345.pdf\n        service_type: International\n        service_level: Standard\n        requested_tracking_number: 1234-56789\n        reference:\n          merchant_order_number: SHIP-1234-56789\n        from:\n          name: John Doe\n          phone_number: '+60138201527'\n          email: john.doe@gmail.com\n          address:\n            address1: 17 Lorong Jambu 3\n            address2: ''\n            area: Taman Sri Delima\n            city: Simpang Ampat\n            state: Pulau Pinang\n            address_type: office\n            country: MY\n            postcode: '51200'\n        to:\n          name: Jane Doe\n          phone_number: '+6502700553'\n          email: jane.doe@gmail.com\n          address:\n            address1: 69 Lorong 6 Geylang\n            address2: ''\n            country: SG\n            postcode: '399221'\n        parcel_job:\n          is_pickup_required: false\n          delivery_instructions: 'If recipient is not around, leave parcel in power riser.'\n          delivery_start_date: '2021-12-16'\n          delivery_timeslot:\n            start_time: '09:00'\n            end_time: '12:00'\n            timezone: Asia/Singapore\n          dimensions:\n            weight: 1.5\n    NewOrderV4.1:\n      required:\n        - from\n        - parcel_job\n        - service_level\n        - service_type\n        - to\n      type: object\n      discriminator:\n        propertyName: service_type\n        mapping:\n          Parcel: '#/components/schemas/Parcel'\n          Marketplace: '#/components/schemas/Marketplace'\n          Corporate: '#/components/schemas/Corporate'\n          International: '#/components/schemas/International'\n          Document: '#/components/schemas/Parcel'\n          Return: '#/components/schemas/Parcel'\n          Bulky: '#/components/schemas/Parcel'\n      properties:\n        service_type:\n          $ref: '#/components/schemas/ServiceType'\n        service_level:\n          $ref: '#/components/schemas/ServiceLevel'\n        requested_tracking_number:\n          minLength: 9\n          pattern: '^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$'\n          type: string\n          description: |-\n            If your shipper account is a prefixless account, then `requested_tracking_number` is _required_.\n\n            If your shipper account has a tracking number prefix configured, then the API concatenates your prefix with the `requested_tracking_number` to generate the waybill tracking number.\n\n            If `requested_tracking_number` isn't provided, then the API automatically generates a random tracking number and concatenates your prefix with it to generate the waybill tracking number. \n                          \n            A generic prefix is used for this request, if your account does not have a prefix _and_ if the `requested_tracking_number` is not provided.\n\n            The total length of the generated `tracking_number` is further validated based on your shipper settings. \n                          \n            The default length for `tracking_number` is around 18 characters. If the `requested_tracking_number` is too short, the API auto-pads the value with zeros (`0`). \n                          \n            Check with us if you have any questions regarding your shipper account settings.\n        reference:\n          type: object\n          properties:\n            merchant_order_number:\n              maxLength: 255\n              type: string\n              description: Identifier of the order in shipper's systems.\n          description: 'Reference information. This information returns to the shipper via webhooks, and can be used as query parameters when retrieving orders from our API.'\n        from:\n          type: object\n          description: |-\n            Sender's information. Used for the following:\n            * Contact details for informing the sender regarding parcel updates.\n            * Address details to be printed on the waybill.\n          allOf:\n            - $ref: '#/components/schemas/NewSender'\n        to:\n          type: object\n          description: |-\n            Recipient's information. Used for the following:\n            * Delivery destination.\n            * Contact details for informing the recipient regarding parcel updates.\n            * Address details to be printed on the waybill.\n          allOf:\n            - $ref: '#/components/schemas/NewRecipient'\n        parcel_job:\n          type: object\n          description: |-\n            Details of the parcel's pickup and delivery jobs.\n\n            If no pickup address is provided, Ninja Van uses the default pickup address specified in the shipper pickup reservation settings.\n          allOf:\n            - $ref: '#/components/schemas/ParcelJob'\n      example:\n        service_type: Parcel\n        service_level: Standard\n        requested_tracking_number: 1234-56789\n        reference:\n          merchant_order_number: SHIP-1234-56789\n        from:\n          name: John Doe\n          phone_number: '+60138201527'\n          email: john.doe@gmail.com\n          address:\n            address1: 17 Lorong Jambu 3\n            address2: ''\n            area: Taman Sri Delima\n            city: Simpang Ampat\n            state: Pulau Pinang\n            address_type: office\n            country: MY\n            postcode: '51200'\n        to:\n          name: Jane Doe\n          phone_number: '+60103067174'\n          email: jane.doe@gmail.com\n          address:\n            address1: Jalan PJU 8/8\n            address2: ''\n            area: Damansara Perdana\n            city: Petaling Jaya\n            state: Selangor\n            address_type: home\n            country: MY\n            postcode: '47820'\n        parcel_job:\n          is_pickup_required: true\n          pickup_address_id: '98989012'\n          pickup_service_type: Scheduled\n          pickup_service_level: Standard\n          pickup_date: '2021-12-15'\n          pickup_timeslot:\n            start_time: '09:00'\n            end_time: '12:00'\n            timezone: Asia/Kuala_Lumpur\n          pickup_instructions: Pickup with care!\n          delivery_instructions: 'If recipient is not around, leave parcel in power riser.'\n          delivery_start_date: '2021-12-16'\n          delivery_timeslot:\n            start_time: '09:00'\n            end_time: '12:00'\n            timezone: Asia/Kuala_Lumpur\n          dimensions:\n            weight: 1.5\n          items:\n            - item_description: Sample description\n              quantity: 1\n              is_dangerous_good: false\n    MarketplaceOrder:\n      required:\n        - seller_company_name\n        - seller_id\n      type: object\n      properties:\n        seller_id:\n          maxLength: 255\n          minLength: 1\n          pattern: '^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$'\n          type: string\n          description: 'External reference for the marketplace seller. If your platform is a marketplace, and you are creating an order for a seller on your platform, pass the unique seller ID in this field.'\n          example: John-Doe-Shop\n        seller_company_name:\n          maxLength: 255\n          minLength: 2\n          type: string\n          description: Company name of this marketplace seller.\n          example: John Doe Shop\n      description: Required if the order type is `Marketplace`.\n    CorporateOrder:\n      required:\n        - branch_id\n      type: object\n      properties:\n        branch_id:\n          maxLength: 255\n          minLength: 1\n          pattern: '^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$'\n          type: string\n          description: 'External reference for the corporate branch.'\n          example: Branch-1234\n      description: Required if the order type is `Corporate`.\n    InternationalOrder:\n      required:\n        - portation\n      type: object\n      properties:\n        portation:\n          type: string\n          description: |-\n            For orders with goods that have been or need to be imported into the country, whether by a forwarder or by Ninja Van, set `Import` as the portation type.\n\n            For orders that require goods to be exported by Ninja Van to another country, set `Export` as the portation type.\n          enum:\n            - Import\n            - Export\n      description: Details specific to cross-border.\n      example:\n    CustomsDeclaration:\n      type: object\n      properties:\n        customs_description:\n          type: string\n          maxLength: 255\n          description: |-\n            Details of goods imported or exported.\n          example: men’s shirts\n        native_customs_description:\n          type: string\n          description: |-\n            Details of goods in native language.\n          example:\n            男人衬衫\n        goods_currency:\n          type: string\n          description: |-\n            Currency of goods value.\n          example: USD\n        goods_value:\n          type: string\n          description: |-\n            Goods value for customs declaration.\n          example: '15.99'\n        battery_type:\n          type: string\n          description: |-\n            Battery type.\n          example: No Battery\n        battery_packing:\n          type: string\n          description: |-\n            Battery package.\n          example: No Battery\n        hs_code:\n          type: string\n          description: |-\n            Harmonized System (HS) code to determine the type of goods and their associated tax rate.\n          example: '543111'\n        trade_terms:\n          type: string\n          description: |-\n            Trade terms.\n          example: DDU\n        invoice_url:\n          type: string\n          description: |-\n            Invoice URL.\n          example: www.invoice.com/12345.pdf\n      description: Details specific to cross-border. Applies only to `International` orders.\n    NewSender:\n      required:\n        - address\n        - email\n        - name\n        - phone_number\n      type: object\n      properties:\n        name:\n          maxLength: 255\n          minLength: 3\n          type: string\n          example: John Doe\n        phone_number:\n          maxLength: 32\n          minLength: 6\n          type: string\n          description: |-\n            Phone number of the contact.\n    \n            The API attempts to format the number based on the E.164 format, using the country code of the address provided. If it can be formatted, then the number is considered valid.\n    \n            The API only requires that either the `email` or `phone_number` is valid.\n          example: '+6563337193'\n        email:\n          type: string\n          description: |-\n            Email address of the contact.\n    \n            Must be a valid email address format. The formal definitions are in RFC 5322 (sections 3.2.3 and 3.4.1) and RFC 5321, with a more readable form given in the informational RFC 3696 and the associated errata.\n    \n            The API only requires that either the `email` or `phone_number` is valid. If an email is provided, the API validates it and returns an error if the validation fails.\n          format: email\n          example: john.doe@mail.com\n        address:\n          $ref: '#/components/schemas/NewAddress'\n        collection_point:\n          type: string\n          description: 'This field is experimental.'\n          enum:\n            - Ninja PUDO @ Orchard\n            - Ninja PUDO @ NUH\n    NewRecipient:\n      required:\n        - address\n        - email\n        - name\n        - phone_number\n      type: object\n      properties:\n        name:\n          maxLength: 255\n          minLength: 3\n          type: string\n          example: Jane Doe\n        phone_number:\n          maxLength: 32\n          minLength: 6\n          type: string\n          description: |-\n            Phone number of the contact.\n\n            The API attempts to format the number based on the E.164 format, using the country code of the address provided. If it can be formatted, then the number is considered valid.\n\n            The API only requires that either the `email` or `phone_number` is valid.\n          example: '+6502700553'\n        email:\n          type: string\n          description: |-\n            Email address of the contact.\n\n            Must be a valid email address format. The formal definitions are in RFC 5322 (sections 3.2.3 and 3.4.1) and RFC 5321, with a more readable form given in the informational RFC 3696 and the associated errata.\n\n            The API only requires that either the `email` or `phone_number` is valid. If an email is provided, the API validates it and returns an error if the validation fails.\n          format: email\n          example: jane.doe@mail.com\n        address:\n          $ref: '#/components/schemas/NewAddress'\n        collection_point:\n          type: string\n          description: 'This field is experimental.'\n          enum:\n            - Ninja PUDO @ Orchard\n            - Ninja PUDO @ NUH\n    ParcelJob:\n      required:\n        - delivery_start_date\n        - delivery_timeslot\n        - is_pickup_required\n      type: object\n      properties:\n        delivery_start_date:\n          pattern: '^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$'\n          type: string\n          description: |-\n            Specifies the start date of the delivery period in the `yyyy-MM-dd` format. For example, for standard orders that take 3 days, if the `delivery_start_date` is on `2021-12-15`, the delivery will be attempted at any time from `2021-12-15` to `2021-12-17`.\n\n            The API automatically adjust the date for blocked dates. Double check for the adjusted `delivery_start_date` in response.\n\n            If an order is created before the cutoff time, the API defaults `delivery_start_date` to the same day, if that day is not a blocked date. Otherwise, `delivery_start_date` is defaulted to the next available date.\n        delivery_timeslot:\n          $ref: '#/components/schemas/DeliveryTimeslotInfo'\n        delivery_instructions:\n          type: string\n          description: Delivery instructions for the driver.\n        items:\n          type: array\n          description: |-\n            Number of items in the list cannot exceed 200.\n          items:\n            $ref: '#/components/schemas/Items'\n        allow_self_collection:\n          type: boolean\n          description: |-\n            Indicates whether the customer is allowed to self-collect the parcels.\n            *Required* if a valid delivery collection point (`to.collection_point`) is specified.\n        allow_weekend_delivery:\n          type: boolean\n          description: Specifies whether deliveries can be attempted on weekends.\n          default: true\n        cash_on_delivery:\n          type: number\n          description: Specifies the amount of cash to be collected from the recipient upon delivery.\n          format: double\n        insured_value:\n          type: number\n          description: Specifies the desired insured value of the parcel.\n          format: double\n        dimensions:\n          $ref: '#/components/schemas/Dimension'\n        is_pickup_required:\n          type: boolean\n          description: |-\n            Indicates whether a pickup reservation is required.\n            If set to `true`, the system checks if a pickup reservation exists with the same:\n            * `pickup_date`\n            * Pickup address (inferred from the `parcel_job.pickup_address` or `from.address`)\n\n            The system creates a new pickup reservation if none exists for the current pickup date and address.\n\n            To update the pickup address for a specific `pickup_address_slot_id`, use one of these options:\n            * Call Ninja Van's shipper support hotline.\n            * Update the address tied to the `pickup_address_id` via the pickup reservation API.\n            * Send a new order with an updated pickup address.\n                * The pickup address specified in either the `from` or `pickup_address` field will be used to update the address\n                tied to the `pickup_address_id`.\n                \n                * Existing pickup reservations tied to this `pickup_address_id`, that are already in progress, won't be modified in any way.\n                \n                * You account can be configured to _not_ update future pickup reservation addresses even if the address tied to the `pickup_address_id` has changed.\n\n            To update the pickup time slot for a specific pickup reservation, use one of these options:\n            * Call Ninja Van's shipper support hotline.\n            * Send a new order with the same `pickup_address_id` and `pickup_date`, but with a different `pickup_timeslot`.\n\n            For more details, refer to the notes for the `pickup_timeslot` and `pickup_address_id` fields.\n\n            If you require a `Scheduled` pickup, then provide the following fields:\n            * `pickup_date`\n            * `pickup_timeslot`\n            * `pickup_approximate_volume`\n          default: false\n      discriminator:\n        propertyName: is_pickup_required\n        mapping:\n          'false': '#/components/schemas/NoPickupInfo'\n          'true': '#/components/schemas/PickupInfo'\n    NoPickupInfo:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/ParcelJob'\n    PickupInfo:\n      allOf:\n        - $ref: '#/components/schemas/ParcelJob'\n        - type: object\n          properties:\n            pickup_service_type:\n              type: string\n              description: |-\n                Specifies the pickup service type.\n              default: Scheduled\n            pickup_service_level:\n              type: string\n              description: |-\n                Specifies the pickup service level. You have the option of choosing `Standard` or `Premium` levels.\n\n                Premium pickups have shorter pickup time slots, and the cutoff rules are more relaxed. Check with your Account Manager to see if your account is eligible for Premium pickups.\n              default: Standard\n              enum:\n                - Standard\n                - Premium\n            pickup_address:\n              $ref: '#/components/schemas/NewSender'\n            pickup_address_id:\n              maxLength: 64\n              minLength: 1\n              pattern: '^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$'\n              type: string\n              description: |-\n                For each order creation request, if a pickup is requested, the system checks if the specified pickup address (inferred from the `from` or `pickup_address` field) is different from the existing address stored with the specified `pickup_address_id`.\n\n                This `pickup_address_id` can be mapped to the internal ID of the address in your database. If you store the address in a database table, pass the address ID from the database as a way to provide Ninja Van with a `pickup_address_id`.\n\n                If the specified `pickup_address_id` is not mapped to an existing address, the system does this:\n                * Performs a `POST` operation and creates a new address, mapped to the provided `pickup_address_id`.\n\n                If the specified pickup address is different from the existing address stored with the specified `pickup_address_id`, the system does this:\n                * Performs a `PUT` operation and replaces the address stored with the specified `pickup_address_id`.\n                * Updates the address for all future pickup reservations tied to the old address.\n            pickup_date:\n              pattern: '^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$'\n              type: string\n              description: |-\n                Specifies the date on which the pickup will occur in the `yyyy-MM-dd` format.\n\n                The system will adjust the pickup date automatically to the next available working day, if the specified pickup date:\n                * Falls on a blocked date. For example, a public holiday or warehouse closure.\n                * Doesn't meet the cutoff time for pickup bookings for that day.\n\n                Any adjustments to the pickup date are returned in the response.\n            pickup_timeslot:\n              $ref: '#/components/schemas/PickupTimeslotInfo'\n            pickup_approximate_volume:\n              type: string\n              default: Less than 3 Parcels\n              enum:\n                - Full-Van Load\n                - Half-Van Load\n                - Larger than Van Load\n                - Less than 10 Parcels\n                - Less than 3 Parcels\n                - Trolley Required\n            pickup_instructions:\n              type: string\n              description: Instruction to driver for pickup attempts.\n    NewAddress:\n      required:\n        - address1\n      oneOf:\n        - $ref: '#/components/schemas/IndonesiaAddress'\n        - $ref: '#/components/schemas/MyanmarAddress'\n        - $ref: '#/components/schemas/MalaysiaAddress'\n        - $ref: '#/components/schemas/PhilippinesAddress'\n        - $ref: '#/components/schemas/SingaporeAddress'\n        - $ref: '#/components/schemas/ThailandAddress'\n        - $ref: '#/components/schemas/VietnamAddress'\n      properties:\n        country:\n          $ref: '#/components/schemas/CountryCode'\n        address1:\n          type: string\n          example: 30 Ninja Street\n          description: 'If you are collecting granular address information, concatenate the building number, building name, and street information in this field.'\n        address2:\n          type: string\n          example: '#01-01'\n        address_type:\n          $ref: '#/components/schemas/AddressType'\n        latitude:\n          type: number\n          format: double\n          minimum: -90\n          maximum: 90\n        longitude:\n          type: number\n          format: double\n          minimum: -180\n          maximum: 180\n    IndonesiaAddress:\n      type: object\n      properties:\n        kelurahan:\n          type: string\n          description: For ID addresses.\n        kecamatan:\n          type: string\n          description: For ID addresses.\n        city:\n          type: string\n          description: For ID addresses.\n        province:\n          type: string\n          description: For ID addresses.\n        postcode:\n          type: string\n          description: Postal code for ID addresses.\n      description: Indonesia-specific address fields.\n      example:\n        kelurahan: Kelurahan Gambir\n        kecamatan: Kecamatan Gambir\n        city: Jakarta Selatan\n        province: Jakarta\n        postcode: '10110'\n    MyanmarAddress:\n      required:\n        - postcode\n      type: object\n      properties:\n        township:\n          type: string\n          description: For MM addresses.\n        district:\n          type: string\n          description: For MM addresses.\n        state:\n          type: string\n          description: For MM addresses.\n        postcode:\n          type: string\n          description: Postal code for MM addresses.\n      description: Myanmar-specific address fields.\n      example:\n        township: San Lorenzo South Subdivision\n        district: Malitlit\n        state: LAGUNA\n        postcode: '4026'\n    MalaysiaAddress:\n      required:\n        - postcode\n      type: object\n      properties:\n        area:\n          type: string\n          description: For MY addresses.\n        city:\n          type: string\n          description: For MY addresses.\n        state:\n          type: string\n          description: For MY addresses.\n        postcode:\n          type: string\n          description: Postal-code for MY addresses.\n      description: Malaysia-specific address fields.\n      example:\n        area: Taman Sri Delima\n        city: Simpang Ampat\n        state: Pulau Pinang\n        postcode: '51200'\n    PhilippinesAddress:\n      type: object\n      properties:\n        subdivision:\n          type: string\n          description: For PH addresses.\n        district:\n          type: string\n          description: For PH addresses.\n        city:\n          type: string\n          description: For PH addresses.\n        province:\n          type: string\n          description: For PH addresses.\n        postcode:\n          type: string\n          description: Postal code for PH addresses.\n      description: Philippines-specific address fields.\n      example:\n        subdivision: San Lorenzo South Subdivision\n        district: Malitlit\n        city: Santa Rosa\n        province: LAGUNA\n        postcode: '4026'\n    SingaporeAddress:\n      required:\n        - postcode\n      type: object\n      properties:\n        postcode:\n          type: string\n          description: Postal code for SG addresses.\n      description: Singapore-specific address fields.\n    ThailandAddress:\n      required:\n        - postcode\n      type: object\n      properties:\n        sub_district:\n          type: string\n          description: For TH addresses.\n        district:\n          type: string\n          description: For TH addresses.\n        province:\n          type: string\n          description: For TH addresses.\n        postcode:\n          type: string\n          description: Postal code for TH addresses.\n      description: Thailand-specific address fields.\n      example:\n        sub_district: Bangyai\n        district: Bangyai\n        province: Nonthaburi\n        postcode: '11140'\n    VietnamAddress:\n      type: object\n      properties:\n        ward:\n          type: string\n          description: For VN addresses. Here, enter the name of a ward in an urban district (such as \"Phường Nguyễn Du\" or \"Phường 4\"), or a provincial district-level sub-division (such as \"Huyện Long Thành\").\n        district:\n          type: string\n          description: For VN addresses. Here, enter the name of a provincial city (such as \"Thành phố Biên Hòa\"), or an urban district (such as \"Quận Hai Bà Trưng\" in Hanoi or \"Quận 4\" in Ho Chi Minh).  \n        city:\n          type: string\n          description: For VN addresses. Here, enter the name of a municipality (such as \"Thành phố Hà Nội\" or \"Thành phố Hồ Chí Minh\") or a province (such as \"Tỉnh Đồng Nai\").\n      description: Vietnam-specific address fields.\n      example:\n        ward: Phường Nguyễn Du\n        district: Quận Hai Bà Trưng\n        city: Thành phố Hà Nội\n    CountryCode:\n      type: string\n      example: SG\n      enum:\n        - SG\n        - MY\n        - TH\n        - ID\n        - VN\n        - PH\n        - MM\n    AddressType:\n      type: string\n      description: Indicates the type of address. The value must be either `home` or `office`.\n      enum:\n        - home\n        - office\n    ServiceType:\n      type: string\n      description: Indicates the type of service. Used to inform Ninja Van on what jobs to schedule for this order.\n      enum:\n        - Parcel\n        - Marketplace\n        - Corporate\n        - International\n        - Bulky\n        - Document\n        - Return\n    ServiceLevel:\n      type: string\n      description: Shipment service level.\n      enum:\n        - Standard\n        - Express\n        - Sameday\n        - Nextday\n    DeliveryTimeslotInfo:\n      required:\n        - end_time\n        - start_time\n      type: object\n      properties:\n        start_time:\n          pattern: '^([0-1][0-9]|2[0-3]):[0-5][0-9]$'\n          type: string\n        end_time:\n          pattern: '^([0-1][0-9]|2[0-3]):[0-5][0-9]$'\n          type: string\n        timezone:\n          $ref: '#/components/schemas/Timezone'\n      description: |-\n        Delivery time slot information. The valid time slots are:\n\n          * \"09:00\" to \"12:00\"\n          * \"09:00\" to \"18:00\"\n          * \"09:00\" to \"22:00\"\n          * \"12:00\" to \"15:00\"\n          * \"15:00\" to \"18:00\"\n          * \"18:00\" to \"22:00\"\n    PickupTimeslotInfo:\n      required:\n        - end_time\n        - start_time\n      type: object\n      properties:\n        start_time:\n          pattern: '^([0-1][0-9]|2[0-3]):[0-5][0-9]$'\n          type: string\n        end_time:\n          pattern: '^([0-1][0-9]|2[0-3]):[0-5][0-9]$'\n          type: string\n        timezone:\n          $ref: '#/components/schemas/Timezone'\n      description: |-\n        Pickup time slot information. The valid time slots are:\n\n          * \"09:00\" to \"12:00\"\n          * \"09:00\" to \"18:00\"\n          * \"09:00\" to \"22:00\"\n          * \"12:00\" to \"15:00\"\n          * \"15:00\" to \"18:00\"\n          * \"18:00\" to \"22:00\"\n\n        When scheduling a pickup, keep in mind our cutoff rules for the Standard and Premium service levels.\n\n        Standard service level:\n        * If you created an order before the cutoff time, but the pickup end time is less than 3 hours from now, then the pickup will roll over to the next working day.\n        * If you created an order before the cutoff time, and the pickup end time is 3 hours or more from now, then the pickup can be created on the same day.\n        * If you created an order after the cutoff time, then the pickup will roll over to the next working day.\n\n        Premium service level:\n        * If you created an order before the cutoff time, but the pickup end time is less than 90 minutes from now, then the pickup request will fail.\n        * If you created an order before the cutoff time, and the pickup end time is 90 minutes or more from now, then the pickup can be created on the same day.\n        * If you created an order after the cutoff time, then the pickup will rollover to next working day.\n\n        **Note:** If you're unsure what the cutoff time is, check with your Account Manager.\n\n    Timezone:\n      type: string\n      enum:\n        - Asia/Singapore\n        - Asia/Kuala_Lumpur\n        - Asia/Jakarta\n        - Asia/Jayapura\n        - Asia/Makassar\n        - Asia/Bangkok\n        - Asia/Manila\n        - Asia/Ho_Chi_Minh\n        - Asia/Yangon\n    Dimension:\n      type: object\n      properties:\n        size:\n          type: string\n          enum:\n            - S\n            - M\n            - L\n            - XL\n            - XXL\n        weight:\n          type: number\n          description: 'The weight of the parcel, in kilograms (k.g.).'\n          format: double\n        length:\n          type: number\n          description: 'The length of the parcel, in centimeters (c.m.).'\n          format: double\n        width:\n          type: number\n          description: 'The width of the parcel, in centimeters (c.m.).'\n          format: double\n        height:\n          type: number\n          description: 'The height of the parcel, in centimeters (c.m.).'\n          format: double\n      description: Dimension information of parcels or objects.\n    Items:\n      required:\n        - item_description\n      type: object\n      properties:\n        item_description:\n          maxLength: 255\n          type: string\n          description: The description of the item.\n        quantity:\n          type: number\n          description: Total quantity of the item.\n        is_dangerous_good:\n          type: boolean\n          description: Declaration of dangerous goods for air freight.\n      description: Details of the items.\n    PickupBooking:\n      allOf:\n        - $ref: '#/components/schemas/NewPickupBooking'\n    NewPickupBooking:\n      type: object\n      properties:\n        pickup_service_type:\n          type: string\n          description: |-\n            Specifies the pickup service type.\n          default: Scheduled\n        pickup_service_level:\n          type: string\n          description: |-\n            Specifies the pickup service level. You have the option of choosing `Standard` or `Premium` levels.\n\n            Premium pickups have shorter pickup time slots, and the cutoff rules are more relaxed. Check with your Account Manager to see if your account is eligible for Premium pickups.\n          default: Standard\n          enum:\n            - Standard\n            - Premium\n        pickup_date:\n          pattern: '^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$'\n          type: string\n          description: |-\n            Specifies the date on which the pickup will occur in the `yyyy-MM-dd` format.\n\n            The system will adjust the pickup date automatically to the next available working day, if the specified pickup date:\n            * Falls on a blocked date. For example, a public holiday or warehouse closure.\n            * Doesn't meet the cutoff time for pickup bookings for that day.\n\n            Any adjustments to the pickup date are returned in the response.\n        pickup_timeslot:\n          $ref: '#/components/schemas/PickupTimeslotInfo'\n        pickup_instructions:\n          type: string\n        pickup_approximate_volume:\n          type: string\n          enum:\n            - Full-Van Load\n            - Half-Van Load\n            - Larger than Van Load\n            - Less than 10 Parcels\n            - Less than 3 Parcels\n            - Trolley Required\n        pickup_address:\n          $ref: '#/components/schemas/NewSender'\n        reference:\n          type: object\n          properties:\n            merchant_pickup_booking_number:\n              maxLength: 255\n              type: string\n              description: Identifier of the pickup booking in shipper's systems.\n          description: 'Reference information. This information returns to the shipper via webhooks, and can be used as query parameters when retrieving orders from the our API.'\n      example:\n        pickup_address:\n          name: John Doe\n          phone_number: '+60138201527'\n          email: john.doe@gmail.com\n          address:\n            address1: 17 Lorong Jambu 3\n            address2: ''\n            area: Taman Sri Delima\n            city: Simpang Ampat\n            state: Pulau Pinang\n            country: MY\n            postcode: '51200'\n        pickup_service_type: Scheduled\n        pickup_service_level: Standard\n        pickup_date: '2021-12-15'\n        pickup_timeslot:\n          start_time: '09:00'\n          end_time: '12:00'\n          timezone: Asia/Kuala_Lumpur\n        pickup_instructions: Pickup with care!\n        pickup_approximate_volume: Less than 3 Parcels\n        reference:\n          merchant_pickup_booking_number: Pickup-123456\n    AccessTokenGrantRequest:\n      required:\n        - client_id\n        - client_secret\n        - grant_type\n      type: object\n      properties:\n        client_id:\n          type: string\n          description: Client ID from your Ninja Dashboard account.\n        client_secret:\n          type: string\n          description: Client Key from your Ninja Dashboard account.\n        grant_type:\n          type: string\n          enum:\n            - client_credentials\n    AccessTokenGrantResponse:\n      required:\n        - access_token\n        - expires\n        - expires_in\n        - token_type\n      type: object\n      properties:\n        access_token:\n          type: string\n          description: Bearer token to be included in the `Authorization` HTTP header for all API requests.\n        expires:\n          minimum: 1\n          type: integer\n          description: The epoch timestamp at which the access token expires.\n          format: int32\n        expires_in:\n          minimum: 300\n          type: integer\n          description: The number of seconds at which the access token expires.\n          format: int32\n        token_type:\n          type: string\n          enum:\n            - bearer\n    ErrorResponse:\n      required:\n        - error\n      type: object\n      properties:\n        error:\n          $ref: '#/components/schemas/Error'\n    Error:\n      required:\n        - request_id\n      type: object\n      properties:\n        code:\n          type: string\n          description: Internal error reference code.\n        request_id:\n          type: string\n          description: Request identifier for error tracking.\n        title:\n          type: string\n          description: Frontend-friendly error title.\n        message:\n          type: string\n          description: Frontend-friendly error message.\n        details:\n          type: array\n          items:\n            $ref: '#/components/schemas/ErrorDetail'\n    ErrorDetail:\n      required:\n        - field\n        - message\n        - reason\n      type: object\n      properties:\n        reason:\n          type: string\n        field:\n          type: string\n        message:\n          type: string\n    CancelOrderResponse:\n      type: object\n      properties:\n        trackingId:\n          type: string\n          description: Tracking ID of the order that was cancelled.\n        status:\n          type: string\n          description: Status of the order.\n        updatedAt:\n          type: string\n          description: Date on which the order was cancelled.\n          format: datetime\n    OpeningTime:\n          type: object\n          properties:\n            day_of_week:\n              description: Number of the day starting from \"1\" for Monday.\n              type: integer\n              example: \"1\"\n            end_time:\n              description: Time at which the Ninja Point closes.\n              type: string\n              example: \"22:00:00\"\n            start_time:\n              description: Time at which the Ninja Point opens for business.\n              type: string\n              example: \"07:00:00\"\n    DistributionPointV2:\n      type: object\n      properties:\n        address_1:\n          description: Unit and block of the Ninja Point's address.\n          type: string\n          example: \"#01-19/20/21 Clifford Centre\"\n        address_2:\n          description: Street address of the Ninja Point.\n          type: string\n          example: \"24 Raffles Place\"\n        allow_create_pack:\n          description: Flag to indicate if the Ninja Point allows \"pack\" parcel creation.\n          type: boolean\n          example: false\n        allow_create_post:\n          description: Flag to indicate if the Ninja Point allows \"post\" parcel creation.\n          type: boolean\n          example: false\n        allow_customer_return:\n          description: Flag to indicate if the Ninja Point allows customer returns.\n          type: boolean\n          example: false\n        allow_shipper_send:\n          description: Flag to indicate if the Ninja Point allows shippers to drop-off \"send\" parcels.\n          type: boolean\n          example: false\n        can_customer_collect:\n          description: Flag to indicate if the Ninja Point allows customer collection.\n          type: boolean\n          example: true\n        directions:\n          description: Additional description on how to find the Ninja Point.\n          type: string\n          example: Next to Setish Boutique\n        distance:\n          description: N/A\n          type: number\n        dpms_id:\n          description: Legacy Ninja Point identifier.\n          type: number\n          example: 1337\n        floor_number:\n          description: Floor number of the Ninja Point's address.\n          type: string\n          example: \"01\"\n        id:\n          description: Ninja Van's identifier for the Ninja Point.\n          type: integer\n          example: 118\n        latitude:\n          description: Latitude of the Ninja Point's location.\n          type: number\n          example: 3.009829\n        longitude:\n          description: Longitude of the Ninja Point's location.\n          type: number\n          example: 102.770408\n        max_parcel_stay_duration:\n          description: Maximum number of days a parcel can stay at the Ninja Point.\n          type: number\n          example: 3\n        name:\n          description: >\n            Descriptive names of the locations easily understood by customers, to be used in the selection dropdown list.\n          type: string\n          example: \"Mr Fix at Bukit Merah Central\"\n        opening_hours:\n          description: Details of the Ninja Point's opening hours.\n          type: array\n          items:\n            $ref: '#/components/schemas/OpeningTime'\n        packs_sold_here:\n          description: Flag to indicate if Ninja Packs are available for purchase at the Ninja Point.\n          type: boolean\n          example:\n            - true\n        partner_id:\n          description: Ninja Point partner's identifier.\n          type: number\n          example: 123\n        partner_name:\n          description: Ninja Point partner's name.\n          type: string\n          example: \"Antoni's Cafe\"\n        postal_code:\n          description: Postal code of the Ninja Point's address.\n          type: string\n          example: \"678265\"\n        short_name:\n          description: Identifier used by the order creation endpoint to map to the Ninja Point.\n          type: string\n          example: \"IS_UNS\"\n        type:\n          description: Type of the Ninja Point.\n          type: string\n          enum:\n            - BOX\n            - SHOP\n        unit_number:\n          description: Unit number of the Ninja Point's address.\n          type: string\n          example: \"123\"\n    SendParcelScanResponse:\n      required:\n        - tracking_id\n        - type\n        - status\n        - granular_status\n      type: object\n      properties:\n        tracking_id:\n          type: string\n          description: 'Tracking ID of the parcel'\n        type:\n          type: string\n          description: 'Type of parcel (Normal | Return)'\n        status:\n          type: string\n          description: 'Identifies the major milestone for where an order is in the parcel life cycle'\n        granular_status:\n          type: string\n          description: 'Identify more detailed transitions inside the status'\n      example:\n        tracking_id: NVSGBEDBP03784ADPL\n        type: Normal\n        status: Completed\n        granular_status: Completed\n    SendWebhookRequest:\n      required:\n        - store\n        - received_at\n        - tracking_ids\n      type: object\n      properties:\n        store:\n          type: string\n          description: External store ID.\n        received_at:\n          type: string\n          description: Date and time when the parcel is dropped off at the Ninja Point (yyyy-MM-dd HH:mm:ss in UTC).\n        tracking_ids:\n          type: array\n          description: List of tracking IDs to be dropped off.\n          items:\n            type: string\n      example:\n        store: PSVKV4M16A\n        received_at: 2022-06-01 00:00:00\n        tracking_ids: [\"NVSGBEDBP12345ADPL\", \"NVSGBEDBP03784ADPL\"]\n    SendWebhookResponse:\n      required:\n        - success\n        - error\n        - vendor_code\n        - store\n      type: object\n      properties:\n        success:\n          type: array\n          description: List of parcels that were dropped off.\n          items:\n            $ref: '#/components/schemas/SendWebhookSuccess'\n        error:\n          type: array\n          description: List of tracking IDs that weren't successfully dropped off.\n          items:\n            type: string\n        vendor_code:\n          type: string\n          description: Unique identifier used by the partner for integration.\n        store:\n          type: string\n          description: External store ID.\n      example:\n        success: [{\"tracking_id\": 'NVSGBEDBP03784ADPL', \"job_number\": 123, \"pin\": 239812}]\n        error: [\"NVSGBEDBP12345ADPL\"]\n        vendor_code: NV\n        store: PSVKV4M16A\n    SendWebhookSuccess:\n      required:\n        - tracking_id\n        - job_number\n        - pin\n      type: object\n      properties:\n        tracking_id:\n          type: string\n          description: Tracking ID of the parcel.\n        job_number:\n          type: integer\n          description: Ninja Van job number to which the parcel is added.\n        pin:\n          type: string\n          description: Unlock code used by the driver during the parcel handover.\n      example:\n        tracking_id: NVSGBEDBP03784ADPL\n        job_number: 123\n        pin: 239812\n    DpOrderEventRequest:\n      required:\n        - tracking_id\n        - store_id\n      type: object\n      properties:\n        tracking_id:\n          type: string\n          description: Tracking ID of the parcel.\n        store_id:\n          type: string\n          description: External store ID.\n        received_at:\n          type: string\n          description: Date and time when the store received the parcel from the driver (yyyy-MM-dd HH:mm:ss in UTC).\n        released_at:\n          type: string\n          description: Date and time when the store released the parcel to the driver or customer (yyyy-MM-dd HH:mm:ss in UTC).\n        customer_unlock_code:\n          type: string\n          description: Code used by the customer to collect the parcel.\n    PriceEstimate:\n      required:\n        - service_level\n        - from\n        - to\n      type: object\n      properties:\n        weight:\n          type: number\n          description: Weight of the parcel, in kilograms (k.g.). If a value is not provided or zero is provided, the price will be estimated based on 1 kg instead.\n          format: double\n        service_level:\n          $ref: '#/components/schemas/ServiceLevel'\n        from:\n          type: object\n          description: Zone codes for the origin of the order.\n          allOf:\n            - $ref: '#/components/schemas/BillingZone'\n        to:\n          type: object\n          description: Zone codes for the destination of the order.\n          allOf:\n            - $ref: '#/components/schemas/BillingZone'\n      example:\n        weight: 2.38\n        service_level: Standard\n        from:\n          l1_tier_code: ID_A00007_01\n          l2_tier_code: ID_B00069_01\n        to:\n          l1_tier_code: ID_A00022_01\n          l2_tier_code: ID_B00296_01\n    BillingZone:\n      required:\n        - l1_tier_code\n        - l2_tier_code\n      type: object\n      properties:\n        l1_tier_code:\n          $ref: '#/components/schemas/ZoneTierCode'\n        l2_tier_code:\n          $ref: '#/components/schemas/ZoneTierCode'\n    ZoneTierCode:\n      type: string\n      description: Refer to [Zone code mapping](#tag/Reference/Zone-code-mapping)\n    SingleTrackingNumberResponse:\n      $ref: \"#/components/schemas/TrackingEvent\"\n    MultipleTrackingNumbersResponse:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TrackingEvent\"\n          example:\n            - tracking_number: NVSG01NFD000000001\n              is_full_history_available: true\n              events:\n              - shipper_id: 100001\n                tracking_number: NVSG01NFD000000001\n                shipper_order_ref_no: NVQA-NFD\n                timestamp: 2021-12-15T06:22:48+0000\n                status: Pending Pickup\n                is_parcel_on_rts_leg: false\n              - shipper_id: 100001\n                tracking_number: NVSG01NFD000000001\n                shipper_order_ref_no: NVQA-NFD\n                timestamp: 2021-12-15T06:23:20+0000\n                status: Arrived at Origin Hub\n                is_parcel_on_rts_leg: false\n                comments: SG-BUKIT TIMAH-Zone\n              - shipper_id: 100001\n                tracking_number: NVSG01NFD000000001\n                shipper_order_ref_no: NVQA-NFD\n                timestamp: 2021-12-15T06:23:40+0000\n                status: Delivered\n                is_parcel_on_rts_leg: false\n              - shipper_id: 100001\n                tracking_number: NVSG01NFD000000001\n                shipper_order_ref_no: NVQA-NFD\n                timestamp: 2021-12-15T06:23:40+0000\n                status: Delivered, Received by Customer\n                is_parcel_on_rts_leg: false\n            - tracking_number: NVSG01NFD000000002\n              is_full_history_available: true\n              events:\n              - shipper_id: 100002\n                tracking_number: NVSG01NFD000000002\n                shipper_order_ref_no: NVQA-NFD\n                timestamp: 2021-12-15T06:22:48+0000\n                status: Pending Pickup\n                is_parcel_on_rts_leg: false\n              - shipper_id: 100002\n                tracking_number: NVSG01NFD000000002\n                shipper_order_ref_no: NVQA-NFD\n                timestamp: 2021-12-15T06:23:20+0000\n                status: Arrived at Origin Hub\n                is_parcel_on_rts_leg: false\n                arrived_at_origin_hub_information:\n                  country: Sg\n                  city: Marsiling\n                  hub: Express\n              - shipper_id: 100002\n                tracking_number: NVSG01NFD000000002\n                shipper_order_ref_no: NVQA-NFD\n                timestamp: 2021-12-15T06:23:40+0000\n                status: Delivered\n                is_parcel_on_rts_leg: false\n              - shipper_id: 100002\n                tracking_number: NVSG01NFD000000002\n                shipper_order_ref_no: NVQA-NFD\n                timestamp: 2021-12-15T06:23:40+0000\n                status: Delivered, Received by Customer\n                is_parcel_on_rts_leg: false\n    arrived_at_transit_hub_information:\n        description: Information of the transit hub.\n        type: object\n        properties:\n          country:\n            type: string\n            description: Country of the transit hub.\n          city:\n            type: string\n            description: City of the transit hub.\n          hub:\n            type: string\n            description: Name of the transit hub.\n    in_transit_to_next_sorting_hub_information:\n        description: Information of the transit hub.\n        type: object\n        properties:\n          country:\n            type: string\n            description: Country of the transit hub.\n          city:\n            type: string\n            description: City of the transit hub.\n          hub:\n            type: string\n            description: Name of the transit hub.\n    arrived_at_destination_hub_information:\n        description: Information of the destination hub.\n        type: object\n        properties:\n          country:\n            type: string\n            description: Country of the destination hub.\n          city:\n            type: string\n            description: City of the destination hub.\n          hub:\n            type: string\n            description: Name of the destination hub.\n    TrackingEvent:\n      type: object\n      required:\n        - tracking_number\n        - is_full_history_available\n        - events\n      description: Details of the tracking events.\n      properties:\n        tracking_number:\n          type: string\n          pattern: '^([a-zA-Z0-9]+[-])*[a-zA-Z0-9]+$'\n        is_full_history_available:\n          type: boolean\n          description: Determine if full events are available for the tracking number provided.\n        events:\n          $ref: \"#/components/schemas/Event\"\n      example:\n        tracking_number: NVSG01NFD000000001\n        is_full_history_available: true\n        events:\n        - shipper_id: 100001\n          tracking_number: NVSG01NFD000000001\n          shipper_order_ref_no: NVQA-NFD\n          timestamp: 2021-12-15T06:22:48+0000\n          status: Pending Pickup\n          is_parcel_on_rts_leg: false\n        - shipper_id: 100001\n          tracking_number: NVSG01NFD000000001\n          shipper_order_ref_no: NVQA-NFD\n          timestamp: 2021-12-15T06:23:20+0000\n          status: Arrived at Origin Hub\n          is_parcel_on_rts_leg: false\n          comments: SG-BUKIT TIMAH-Zone\n        - shipper_id: 100001\n          tracking_number: NVSG01NFD000000001\n          shipper_order_ref_no: NVQA-NFD\n          timestamp: 2021-12-15T06:23:40+0000\n          status: Delivered\n          is_parcel_on_rts_leg: false\n        - shipper_id: 100001\n          tracking_number: NVSG01NFD000000001\n          shipper_order_ref_no: NVQA-NFD\n          timestamp: 2021-12-15T06:23:40+0000\n          status: Delivered, Received by Customer\n          is_parcel_on_rts_leg: false\n    Event:\n      type: array\n      items:\n        type: object\n        required:\n          - shipper_id\n          - tracking_number\n          - shipper_order_ref_no\n          - status\n          - timestamp\n          - is_parcel_on_rts_leg\n        properties:\n          shipper_id:\n            type: string\n            description: Identifier of the shipper.\n          tracking_number:\n            type: string\n            description: Identifier of the order.\n          shipper_order_ref_no:\n            type: string\n            description: Identifier of the order in shipper's systems.\n          timestamp:\n            type: string\n            description: Timestamp of the event.\n          status:\n            type: string\n            description: Status of the order.\n          is_parcel_on_rts_leg:\n            type: boolean\n            description: Determine if it is a return parcel.\n          WebhookV1HubLocation:\n            type: string\n            description: Country, city and shortname of the inbounded hub.\n            pattern: \"<hub_country>-<hub_city>-<hub_short_name>\"\n          WebhookV2HubLocation:\n            description: Location of the hub for the respective status.\n            oneOf:\n              - $ref: \"#/components/schemas/arrived_at_transit_hub_information\"\n              - $ref: \"#/components/schemas/in_transit_to_next_sorting_hub_information\"\n              - $ref: \"#/components/schemas/arrived_at_destination_hub_information\"\n      description: 'Events information.'\n","contentType":"yaml","_type":"api_spec"},{"_id":"env_env_636bbf4f21cd1c70e781dbe25d9c7755ddaf0c76_sub__9855b0b1","parentId":"env_636bbf4f21cd1c70e781dbe25d9c7755ddaf0c76","modified":1680679362893,"created":1680679362893,"name":"OpenAPI env api.ninjavan.co","data":{"scheme":"https","base_path":"","host":"api.ninjavan.co"},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1680679362893,"_type":"environment"},{"_id":"env_env_636bbf4f21cd1c70e781dbe25d9c7755ddaf0c76_sub__2eb119ce","parentId":"env_636bbf4f21cd1c70e781dbe25d9c7755ddaf0c76","modified":1680679362894,"created":1680679362894,"name":"OpenAPI env api-sandbox.ninjavan.co","data":{"scheme":"https","base_path":"","host":"api-sandbox.ninjavan.co"},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1680679362894,"_type":"environment"}]}